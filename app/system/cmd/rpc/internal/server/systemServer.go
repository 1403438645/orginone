// Code generated by goctl. DO NOT EDIT!
// Source: system.proto

package server

import (
	"context"

	"orginone/app/system/cmd/rpc/internal/logic"
	"orginone/app/system/cmd/rpc/internal/svc"
	"orginone/common/rpcs/system"
)

type SystemServer struct {
	svcCtx *svc.ServiceContext
	system.UnimplementedSystemServer
}

func NewSystemServer(svcCtx *svc.ServiceContext) *SystemServer {
	return &SystemServer{
		svcCtx: svcCtx,
	}
}

// 系统字典(blade-system)
func (s *SystemServer) FindDicItemsByValue(ctx context.Context, in *system.FindDicItemReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindDicItemsByValueLogic(ctx, s.svcCtx)
	return l.FindDicItemsByValue(in)
}

// 字典分页查询
func (s *SystemServer) FindAllDic(ctx context.Context, in *system.FindAllDicReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindAllDicLogic(ctx, s.svcCtx)
	return l.FindAllDic(in)
}

// 设置主租户
func (s *SystemServer) SetMasterUnit(ctx context.Context, in *system.SetMasterUnitReq) (*system.CommonRpcRes, error) {
	l := logic.NewSetMasterUnitLogic(ctx, s.svcCtx)
	return l.SetMasterUnit(in)
}

// 修改用户名
func (s *SystemServer) UpdateUserName(ctx context.Context, in *system.UpdateUserName) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateUserNameLogic(ctx, s.svcCtx)
	return l.UpdateUserName(in)
}

// 获取用户信息
func (s *SystemServer) FindPersonByUserId(ctx context.Context, in *system.PersonByUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindPersonByUserIdLogic(ctx, s.svcCtx)
	return l.FindPersonByUserId(in)
}

// 获取用户或角色信息
func (s *SystemServer) FindUserOrRoleInfo(ctx context.Context, in *system.RoleUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindUserOrRoleInfoLogic(ctx, s.svcCtx)
	return l.FindUserOrRoleInfo(in)
}

// 获取用户信息
func (s *SystemServer) FindUserByUserId(ctx context.Context, in *system.PrimaryKeyReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindUserByUserIdLogic(ctx, s.svcCtx)
	return l.FindUserByUserId(in)
}

// 获取机构或人员信息
func (s *SystemServer) FindAgencyOrPerson(ctx context.Context, in *system.AgencyPersonReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindAgencyOrPersonLogic(ctx, s.svcCtx)
	return l.FindAgencyOrPerson(in)
}

// 根据账户查找租户
func (s *SystemServer) FindTenantByAccount(ctx context.Context, in *system.ByAccountReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindTenantByAccountLogic(ctx, s.svcCtx)
	return l.FindTenantByAccount(in)
}

// 根据账户查找租户分页
func (s *SystemServer) FindTenantInfoByAccount(ctx context.Context, in *system.AccountTenantReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindTenantInfoByAccountLogic(ctx, s.svcCtx)
	return l.FindTenantInfoByAccount(in)
}

// 根据名称查询账户
func (s *SystemServer) SearchTeantByName(ctx context.Context, in *system.SearchTeantReq) (*system.CommonRpcRes, error) {
	l := logic.NewSearchTeantByNameLogic(ctx, s.svcCtx)
	return l.SearchTeantByName(in)
}

// 加入租户
func (s *SystemServer) JoinTeantByCode(ctx context.Context, in *system.TenantCodeReq) (*system.CommonRpcRes, error) {
	l := logic.NewJoinTeantByCodeLogic(ctx, s.svcCtx)
	return l.JoinTeantByCode(in)
}

// 创建租户
func (s *SystemServer) CreateTenant(ctx context.Context, in *system.CreateTenantReq) (*system.CommonRpcRes, error) {
	l := logic.NewCreateTenantLogic(ctx, s.svcCtx)
	return l.CreateTenant(in)
}

// 获取租户详情
func (s *SystemServer) FindTenantById(ctx context.Context, in *system.TenantByIdReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindTenantByIdLogic(ctx, s.svcCtx)
	return l.FindTenantById(in)
}

// 根据组织编号和类型
func (s *SystemServer) FindAllGroupByCodeAndType(ctx context.Context, in *system.SearchAllGroupReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindAllGroupByCodeAndTypeLogic(ctx, s.svcCtx)
	return l.FindAllGroupByCodeAndType(in)
}

// 查询用户系统菜单树
func (s *SystemServer) FindRoleMenusByUser(ctx context.Context, in *system.RoleMenusByUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindRoleMenusByUserLogic(ctx, s.svcCtx)
	return l.FindRoleMenusByUser(in)
}

// 查询用户应用菜单树
func (s *SystemServer) FindMarketAppRoleMenusByUser(ctx context.Context, in *system.RoleMenusByUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindMarketAppRoleMenusByUserLogic(ctx, s.svcCtx)
	return l.FindMarketAppRoleMenusByUser(in)
}

// 更新单位信息
func (s *SystemServer) UpdateUnitInfo(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateUnitInfoLogic(ctx, s.svcCtx)
	return l.UpdateUnitInfo(in)
}

// 查询租户内设机构列表(树)
func (s *SystemServer) FindInnerAgencyTreeByTenantCode(ctx context.Context, in *system.TenantCodeReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindInnerAgencyTreeByTenantCodeLogic(ctx, s.svcCtx)
	return l.FindInnerAgencyTreeByTenantCode(in)
}

// 查询全新的部门编码
func (s *SystemServer) FindAgencyDeptCodeByTenantCode(ctx context.Context, in *system.TenantCodeReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindAgencyDeptCodeByTenantCodeLogic(ctx, s.svcCtx)
	return l.FindAgencyDeptCodeByTenantCode(in)
}

// 查询全新人员编号
func (s *SystemServer) GetNewPersonUserCode(ctx context.Context, in *system.TenantCodeReq) (*system.CommonRpcRes, error) {
	l := logic.NewGetNewPersonUserCodeLogic(ctx, s.svcCtx)
	return l.GetNewPersonUserCode(in)
}

// 获取租户下人员信息
func (s *SystemServer) FindTenantPersons(ctx context.Context, in *system.SearchPersonByTenantCodeReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindTenantPersonsLogic(ctx, s.svcCtx)
	return l.FindTenantPersons(in)
}

// 获取租户下集团信息
func (s *SystemServer) FindAllGroupByTentantCode(ctx context.Context, in *system.FindAllGroupByTenantCodeReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindAllGroupByTentantCodeLogic(ctx, s.svcCtx)
	return l.FindAllGroupByTentantCode(in)
}

// 获取行政区域树
func (s *SystemServer) FindAdministrativeTree(ctx context.Context, in *system.Nil) (*system.CommonRpcRes, error) {
	l := logic.NewFindAdministrativeTreeLogic(ctx, s.svcCtx)
	return l.FindAdministrativeTree(in)
}

// 分页获取行政区域
func (s *SystemServer) FindAdministrativeList(ctx context.Context, in *system.PageRequest) (*system.CommonRpcRes, error) {
	l := logic.NewFindAdministrativeListLogic(ctx, s.svcCtx)
	return l.FindAdministrativeList(in)
}

// 获取岗位列表
func (s *SystemServer) FindJobList(ctx context.Context, in *system.FindJobListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindJobListLogic(ctx, s.svcCtx)
	return l.FindJobList(in)
}

// 获取所有单位列表（包含子集团）根据集团id
func (s *SystemServer) FindUnitPageByGroupId(ctx context.Context, in *system.FindUnitPageReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindUnitPageByGroupIdLogic(ctx, s.svcCtx)
	return l.FindUnitPageByGroupId(in)
}

// 获取所有单位列表（不含子集团）根据集团id
func (s *SystemServer) FindBlowUnitPageByGroupId(ctx context.Context, in *system.FindUnitPageReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindBlowUnitPageByGroupIdLogic(ctx, s.svcCtx)
	return l.FindBlowUnitPageByGroupId(in)
}

// 获取集团信息
func (s *SystemServer) FingGroupInfoById(ctx context.Context, in *system.PrimaryKeyReq) (*system.CommonRpcRes, error) {
	l := logic.NewFingGroupInfoByIdLogic(ctx, s.svcCtx)
	return l.FingGroupInfoById(in)
}

// 分页查询租户
func (s *SystemServer) FindScenesListPage(ctx context.Context, in *system.FindScenesListPageReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindScenesListPageLogic(ctx, s.svcCtx)
	return l.FindScenesListPage(in)
}

// 删除租户
func (s *SystemServer) RemoveScenesByIds(ctx context.Context, in *system.RemoveScenesByIdsReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveScenesByIdsLogic(ctx, s.svcCtx)
	return l.RemoveScenesByIds(in)
}

// 分页查询单位
func (s *SystemServer) FindOrgansV2ListPage(ctx context.Context, in *system.FindOrgansV2ListPageReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindOrgansV2ListPageLogic(ctx, s.svcCtx)
	return l.FindOrgansV2ListPage(in)
}

// 删除单位
func (s *SystemServer) RemoveOrgansByIds(ctx context.Context, in *system.V2RemoveByIdsReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveOrgansByIdsLogic(ctx, s.svcCtx)
	return l.RemoveOrgansByIds(in)
}

// 分页查询人员
func (s *SystemServer) FindPersonListPage(ctx context.Context, in *system.FindPersonListPageReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindPersonListPageLogic(ctx, s.svcCtx)
	return l.FindPersonListPage(in)
}

// 删除人员
func (s *SystemServer) RemovePersonByIds(ctx context.Context, in *system.RemovePersonByIdsReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemovePersonByIdsLogic(ctx, s.svcCtx)
	return l.RemovePersonByIds(in)
}

// 删除集团
func (s *SystemServer) RemoveAllGroupByIds(ctx context.Context, in *system.RemoveAllGroupByIdsReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveAllGroupByIdsLogic(ctx, s.svcCtx)
	return l.RemoveAllGroupByIds(in)
}

// 分页查询集团
func (s *SystemServer) FindAllGroupListAll(ctx context.Context, in *system.FindAllGroupListAllReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindAllGroupListAllLogic(ctx, s.svcCtx)
	return l.FindAllGroupListAll(in)
}

// 分页查询角色
func (s *SystemServer) FindRoleListPage(ctx context.Context, in *system.FindRoleListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindRoleListPageLogic(ctx, s.svcCtx)
	return l.FindRoleListPage(in)
}

// 查询集团层级根据集团id
func (s *SystemServer) FindGroupLayerById(ctx context.Context, in *system.GroupLayerByIdReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindGroupLayerByIdLogic(ctx, s.svcCtx)
	return l.FindGroupLayerById(in)
}

// 分页查询租户特性
func (s *SystemServer) FindTenantAttrList(ctx context.Context, in *system.FindTenantAttrListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindTenantAttrListLogic(ctx, s.svcCtx)
	return l.FindTenantAttrList(in)
}

// 获取导入状态详情
func (s *SystemServer) FindImportStatusList(ctx context.Context, in *system.FindImportStatusListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindImportStatusListLogic(ctx, s.svcCtx)
	return l.FindImportStatusList(in)
}

// 新增组织人员
func (s *SystemServer) AddPerson(ctx context.Context, in *system.AddPersonReq) (*system.CommonRpcRes, error) {
	l := logic.NewAddPersonLogic(ctx, s.svcCtx)
	return l.AddPerson(in)
}

// 批量新增组织人员
func (s *SystemServer) AddPersons(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewAddPersonsLogic(ctx, s.svcCtx)
	return l.AddPersons(in)
}

// 查询租户图标
func (s *SystemServer) FindTenantIconList(ctx context.Context, in *system.FindTenantIconListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindTenantIconListLogic(ctx, s.svcCtx)
	return l.FindTenantIconList(in)
}

// 分页查询部门
func (s *SystemServer) FindInnerAgencyList(ctx context.Context, in *system.FindInnerAgencyListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindInnerAgencyListLogic(ctx, s.svcCtx)
	return l.FindInnerAgencyList(in)
}

// 获取所有角色列表
func (s *SystemServer) FindAllRolesList(ctx context.Context, in *system.FindAllRolesListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindAllRolesListLogic(ctx, s.svcCtx)
	return l.FindAllRolesList(in)
}

// 修改部门层级关系及用户所在部门
func (s *SystemServer) UpdateAgencyInnerUser(ctx context.Context, in *system.UpdateAgencyInnerUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateAgencyInnerUserLogic(ctx, s.svcCtx)
	return l.UpdateAgencyInnerUser(in)
}

// 创建集团
func (s *SystemServer) CreateGroup(ctx context.Context, in *system.CreateGroupReq) (*system.CommonRpcRes, error) {
	l := logic.NewCreateGroupLogic(ctx, s.svcCtx)
	return l.CreateGroup(in)
}

// 查询集团
func (s *SystemServer) QueryGroup(ctx context.Context, in *system.QueryGroupReq) (*system.CommonRpcRes, error) {
	l := logic.NewQueryGroupLogic(ctx, s.svcCtx)
	return l.QueryGroup(in)
}

// 解散集团
func (s *SystemServer) DisbandGroupById(ctx context.Context, in *system.DisbandGroupReq) (*system.CommonRpcRes, error) {
	l := logic.NewDisbandGroupByIdLogic(ctx, s.svcCtx)
	return l.DisbandGroupById(in)
}

// 获取组织树
func (s *SystemServer) GetGroupTree(ctx context.Context, in *system.GroupTreeReq) (*system.CommonRpcRes, error) {
	l := logic.NewGetGroupTreeLogic(ctx, s.svcCtx)
	return l.GetGroupTree(in)
}

// 获取集团信息
func (s *SystemServer) GetAllgroupInfoById(ctx context.Context, in *system.PrimaryKeyReq) (*system.CommonRpcRes, error) {
	l := logic.NewGetAllgroupInfoByIdLogic(ctx, s.svcCtx)
	return l.GetAllgroupInfoById(in)
}

// 集团应用分发
func (s *SystemServer) GroupAppDistribute(ctx context.Context, in *system.GroupAppDistributeReq) (*system.CommonRpcRes, error) {
	l := logic.NewGroupAppDistributeLogic(ctx, s.svcCtx)
	return l.GroupAppDistribute(in)
}

// 申请加入集团租户列表
func (s *SystemServer) ListApplyTenant(ctx context.Context, in *system.ListApplyTenantReq) (*system.CommonRpcRes, error) {
	l := logic.NewListApplyTenantLogic(ctx, s.svcCtx)
	return l.ListApplyTenant(in)
}

// 分配部门人员
func (s *SystemServer) DistributeDeptPersons(ctx context.Context, in *system.DistributeDeptPersonsReq) (*system.CommonRpcRes, error) {
	l := logic.NewDistributeDeptPersonsLogic(ctx, s.svcCtx)
	return l.DistributeDeptPersons(in)
}

// 根据名字查询人员
func (s *SystemServer) SearchPersonByName(ctx context.Context, in *system.SerarchDeptPersonReq) (*system.CommonRpcRes, error) {
	l := logic.NewSearchPersonByNameLogic(ctx, s.svcCtx)
	return l.SearchPersonByName(in)
}

// 分配名字查询部门
func (s *SystemServer) SearchDeptByName(ctx context.Context, in *system.SerarchDeptPersonReq) (*system.CommonRpcRes, error) {
	l := logic.NewSearchDeptByNameLogic(ctx, s.svcCtx)
	return l.SearchDeptByName(in)
}

// 更新人员电话 补充电话
func (s *SystemServer) UpdatePersonPhoneNumber(ctx context.Context, in *system.UpdatePersonPhoneNumberReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdatePersonPhoneNumberLogic(ctx, s.svcCtx)
	return l.UpdatePersonPhoneNumber(in)
}

// 租户加入申请及审批集团
func (s *SystemServer) TenantsJoinGroup(ctx context.Context, in *system.TenantsJoinGroupReq) (*system.CommonRpcRes, error) {
	l := logic.NewTenantsJoinGroupLogic(ctx, s.svcCtx)
	return l.TenantsJoinGroup(in)
}

// 模糊搜索岗位列表
func (s *SystemServer) SearchJobList(ctx context.Context, in *system.SearchJobListReq) (*system.CommonRpcRes, error) {
	l := logic.NewSearchJobListLogic(ctx, s.svcCtx)
	return l.SearchJobList(in)
}

// 修改岗位并分配人员
func (s *SystemServer) UpdateJobUser(ctx context.Context, in *system.UpdateJobUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateJobUserLogic(ctx, s.svcCtx)
	return l.UpdateJobUser(in)
}

// 新增岗位并分配人员
func (s *SystemServer) AddJobUser(ctx context.Context, in *system.AddJobUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewAddJobUserLogic(ctx, s.svcCtx)
	return l.AddJobUser(in)
}

// 删除岗位
func (s *SystemServer) RemoveJob(ctx context.Context, in *system.RemoveJobReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveJobLogic(ctx, s.svcCtx)
	return l.RemoveJob(in)
}

// 批量修改岗位并分配人员
func (s *SystemServer) UpdateJobUsers(ctx context.Context, in *system.UpdateJobUsersReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateJobUsersLogic(ctx, s.svcCtx)
	return l.UpdateJobUsers(in)
}

// 隐藏、显示树形单位
func (s *SystemServer) UpdateGroupIsHide(ctx context.Context, in *system.UpdateGroupIsHideReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateGroupIsHideLogic(ctx, s.svcCtx)
	return l.UpdateGroupIsHide(in)
}

// 移除实集团叶子节点租户
func (s *SystemServer) RemoveLeafTenants(ctx context.Context, in *system.RemoveLeafTenantsReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveLeafTenantsLogic(ctx, s.svcCtx)
	return l.RemoveLeafTenants(in)
}

// 取性质里的租户列表分页
func (s *SystemServer) FindPropertiesUnitList(ctx context.Context, in *system.FindPropertiesUnitListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindPropertiesUnitListLogic(ctx, s.svcCtx)
	return l.FindPropertiesUnitList(in)
}

// 取性质里的租户列表分页
func (s *SystemServer) CreateDistributeProperties(ctx context.Context, in *system.CreateDistributePropertiesReq) (*system.CommonRpcRes, error) {
	l := logic.NewCreateDistributePropertiesLogic(ctx, s.svcCtx)
	return l.CreateDistributeProperties(in)
}

// 集团创建性质并进行分配
func (s *SystemServer) CreateAndDistributeProperties(ctx context.Context, in *system.CreateAndDistributePropertiesReq) (*system.CommonRpcRes, error) {
	l := logic.NewCreateAndDistributePropertiesLogic(ctx, s.svcCtx)
	return l.CreateAndDistributeProperties(in)
}

// 分配性质给租户
func (s *SystemServer) DistributeProperties(ctx context.Context, in *system.DistributePropertiesReq) (*system.CommonRpcRes, error) {
	l := logic.NewDistributePropertiesLogic(ctx, s.svcCtx)
	return l.DistributeProperties(in)
}

// 获取所有下属集团
func (s *SystemServer) FindGroupListByRelations(ctx context.Context, in *system.FindGroupListByRelationsReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindGroupListByRelationsLogic(ctx, s.svcCtx)
	return l.FindGroupListByRelations(in)
}

// 批量调整租户上级
func (s *SystemServer) UpdateFatherTenant(ctx context.Context, in *system.UpdateFatherTenantReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateFatherTenantLogic(ctx, s.svcCtx)
	return l.UpdateFatherTenant(in)
}

// 人员停用
func (s *SystemServer) BanPersonUser(ctx context.Context, in *system.BanPersonUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewBanPersonUserLogic(ctx, s.svcCtx)
	return l.BanPersonUser(in)
}

// 更新用户角色
func (s *SystemServer) UpdateUserRole(ctx context.Context, in *system.UpdateUserRoleReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateUserRoleLogic(ctx, s.svcCtx)
	return l.UpdateUserRole(in)
}

// 删除用户角色
func (s *SystemServer) DeleteUserRole(ctx context.Context, in *system.UpdateUserRoleReq) (*system.CommonRpcRes, error) {
	l := logic.NewDeleteUserRoleLogic(ctx, s.svcCtx)
	return l.DeleteUserRole(in)
}

// 新增内部机构并分配人员
func (s *SystemServer) AddInnerUser(ctx context.Context, in *system.AddInnerUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewAddInnerUserLogic(ctx, s.svcCtx)
	return l.AddInnerUser(in)
}

// 新增内部机构并分配人员
func (s *SystemServer) ActiveUser(ctx context.Context, in *system.ActiveUserReq) (*system.CommonRpcRes, error) {
	l := logic.NewActiveUserLogic(ctx, s.svcCtx)
	return l.ActiveUser(in)
}

// 移除内部机构人员
func (s *SystemServer) RemoveDeptJobUser(ctx context.Context, in *system.RemoveDeptUserJobReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveDeptJobUserLogic(ctx, s.svcCtx)
	return l.RemoveDeptJobUser(in)
}

// 分页查询性质
func (s *SystemServer) FindPropertiesList(ctx context.Context, in *system.FindPropertiesListReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindPropertiesListLogic(ctx, s.svcCtx)
	return l.FindPropertiesList(in)
}

// 分页角色
func (s *SystemServer) FindRoleListByUserId(ctx context.Context, in *system.FindRoleListByUserIdReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindRoleListByUserIdLogic(ctx, s.svcCtx)
	return l.FindRoleListByUserId(in)
}

// 分页角色Id
func (s *SystemServer) FindRoleIdListByUserId(ctx context.Context, in *system.FindRoleListByUserIdReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindRoleIdListByUserIdLogic(ctx, s.svcCtx)
	return l.FindRoleIdListByUserId(in)
}

// 更新人员信息
func (s *SystemServer) UpdatePersonInfo(ctx context.Context, in *system.CommonRpcRes) (*system.CommonRpcRes, error) {
	l := logic.NewUpdatePersonInfoLogic(ctx, s.svcCtx)
	return l.UpdatePersonInfo(in)
}

// 更新单位信息
func (s *SystemServer) UpdateOrgansInfo(ctx context.Context, in *system.CommonRpcRes) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateOrgansInfoLogic(ctx, s.svcCtx)
	return l.UpdateOrgansInfo(in)
}

// 更新租户信息
func (s *SystemServer) UpdateScenesInfo(ctx context.Context, in *system.CommonRpcRes) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateScenesInfoLogic(ctx, s.svcCtx)
	return l.UpdateScenesInfo(in)
}

// 更新集团信息
func (s *SystemServer) UpdateGroupInfo(ctx context.Context, in *system.UpdateGroupInfoReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateGroupInfoLogic(ctx, s.svcCtx)
	return l.UpdateGroupInfo(in)
}

// 插入文件导入记录
func (s *SystemServer) CreateInputRecord(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewCreateInputRecordLogic(ctx, s.svcCtx)
	return l.CreateInputRecord(in)
}

// 批量导入租户与集团关系
func (s *SystemServer) UpdateTenantRelations(ctx context.Context, in *system.UpdateTenantRelationsReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateTenantRelationsLogic(ctx, s.svcCtx)
	return l.UpdateTenantRelations(in)
}

// 获取所有单位列表（包含子集团）根据集团id
func (s *SystemServer) FindUnitByIds(ctx context.Context, in *system.FindUnitByIdsReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindUnitByIdsLogic(ctx, s.svcCtx)
	return l.FindUnitByIds(in)
}

// 获取菜单树形结构
func (s *SystemServer) TreeMenu(ctx context.Context, in *system.Nil) (*system.CommonRpcRes, error) {
	l := logic.NewTreeMenuLogic(ctx, s.svcCtx)
	return l.TreeMenu(in)
}

// 新增或修改菜单
func (s *SystemServer) SubmitMenu(ctx context.Context, in *system.CommonRpcRes) (*system.CommonRpcRes, error) {
	l := logic.NewSubmitMenuLogic(ctx, s.svcCtx)
	return l.SubmitMenu(in)
}

// 删除菜单
func (s *SystemServer) RemoveMenu(ctx context.Context, in *system.RemoveMenuReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveMenuLogic(ctx, s.svcCtx)
	return l.RemoveMenu(in)
}

// 角色权限
func (s *SystemServer) RoleTreeKeysMenu(ctx context.Context, in *system.RoleTreeKeysMenuReq) (*system.CommonRpcRes, error) {
	l := logic.NewRoleTreeKeysMenuLogic(ctx, s.svcCtx)
	return l.RoleTreeKeysMenu(in)
}

// 获取租户组角色
func (s *SystemServer) ListRoleByAttr(ctx context.Context, in *system.ListRoleByAttrReq) (*system.CommonRpcRes, error) {
	l := logic.NewListRoleByAttrLogic(ctx, s.svcCtx)
	return l.ListRoleByAttr(in)
}

// 新增或修改角色
func (s *SystemServer) UpdateRole(ctx context.Context, in *system.CommonRpcRes) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateRoleLogic(ctx, s.svcCtx)
	return l.UpdateRole(in)
}

// 设置角色权限
func (s *SystemServer) AuthorizationRole(ctx context.Context, in *system.AuthorizationRoleReq) (*system.CommonRpcRes, error) {
	l := logic.NewAuthorizationRoleLogic(ctx, s.svcCtx)
	return l.AuthorizationRole(in)
}

// 删除角色
func (s *SystemServer) RemoveRoleByIds(ctx context.Context, in *system.RemoveRoleByIdsReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveRoleByIdsLogic(ctx, s.svcCtx)
	return l.RemoveRoleByIds(in)
}

// 租户组角色分配
func (s *SystemServer) TenantAttrRoleAlloc(ctx context.Context, in *system.TenantAttrRoleAllocReq) (*system.CommonRpcRes, error) {
	l := logic.NewTenantAttrRoleAllocLogic(ctx, s.svcCtx)
	return l.TenantAttrRoleAlloc(in)
}

// 新增或编辑分类信息
func (s *SystemServer) TenantAttrSubmit(ctx context.Context, in *system.CommonRpcRes) (*system.CommonRpcRes, error) {
	l := logic.NewTenantAttrSubmitLogic(ctx, s.svcCtx)
	return l.TenantAttrSubmit(in)
}

// 删除分类信息
func (s *SystemServer) TenantAttrRemove(ctx context.Context, in *system.TenantAttrRemoveReq) (*system.CommonRpcRes, error) {
	l := logic.NewTenantAttrRemoveLogic(ctx, s.svcCtx)
	return l.TenantAttrRemove(in)
}

// 删除部门
func (s *SystemServer) AgencyRemove(ctx context.Context, in *system.AgencyRemoveReq) (*system.CommonRpcRes, error) {
	l := logic.NewAgencyRemoveLogic(ctx, s.svcCtx)
	return l.AgencyRemove(in)
}

// 主单位导入
func (s *SystemServer) UpdateMsterUnit(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewUpdateMsterUnitLogic(ctx, s.svcCtx)
	return l.UpdateMsterUnit(in)
}

// 岗位导入
func (s *SystemServer) AddJobs(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewAddJobsLogic(ctx, s.svcCtx)
	return l.AddJobs(in)
}

// 部门导入
func (s *SystemServer) AddAgencys(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewAddAgencysLogic(ctx, s.svcCtx)
	return l.AddAgencys(in)
}

// 部门导入
func (s *SystemServer) AddGroupRelations(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewAddGroupRelationsLogic(ctx, s.svcCtx)
	return l.AddGroupRelations(in)
}

// 删除性质
func (s *SystemServer) RemoveProperties(ctx context.Context, in *system.RemovePropertiesReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemovePropertiesLogic(ctx, s.svcCtx)
	return l.RemoveProperties(in)
}

// 保存字典
func (s *SystemServer) SubmitDict(ctx context.Context, in *system.CommonRpcRes) (*system.CommonRpcRes, error) {
	l := logic.NewSubmitDictLogic(ctx, s.svcCtx)
	return l.SubmitDict(in)
}

// 通过名字查找租户列表
func (s *SystemServer) FindTenantByNames(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewFindTenantByNamesLogic(ctx, s.svcCtx)
	return l.FindTenantByNames(in)
}

// 租户导入
func (s *SystemServer) AddTenants(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewAddTenantsLogic(ctx, s.svcCtx)
	return l.AddTenants(in)
}

// 租户图片批量导入
func (s *SystemServer) ImportTenantIcon(ctx context.Context, in *system.ImportTenantIconReq) (*system.CommonRpcRes, error) {
	l := logic.NewImportTenantIconLogic(ctx, s.svcCtx)
	return l.ImportTenantIcon(in)
}

// 租户图片批量导入
func (s *SystemServer) RemoveTenantIcon(ctx context.Context, in *system.CommonRpcReq) (*system.CommonRpcRes, error) {
	l := logic.NewRemoveTenantIconLogic(ctx, s.svcCtx)
	return l.RemoveTenantIcon(in)
}
