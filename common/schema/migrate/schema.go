// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AsAllGroupColumns holds the columns for the "as_all_group" table.
	AsAllGroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tenant_code", Type: field.TypeString, Nullable: true},
		{Name: "group_name", Type: field.TypeString, Nullable: true},
		{Name: "group_description", Type: field.TypeString, Nullable: true},
		{Name: "group_code", Type: field.TypeString, Nullable: true},
		{Name: "depth", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "type", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "social_credit_code", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsAllGroupTable holds the schema information for the "as_all_group" table.
	AsAllGroupTable = &schema.Table{
		Name:       "as_all_group",
		Columns:    AsAllGroupColumns,
		PrimaryKey: []*schema.Column{AsAllGroupColumns[0]},
	}
	// AsAppGroupDistributionDataColumns holds the columns for the "as_app_group_distribution_data" table.
	AsAppGroupDistributionDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "config", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "group_id", Type: field.TypeInt64, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsAppGroupDistributionDataTable holds the schema information for the "as_app_group_distribution_data" table.
	AsAppGroupDistributionDataTable = &schema.Table{
		Name:       "as_app_group_distribution_data",
		Columns:    AsAppGroupDistributionDataColumns,
		PrimaryKey: []*schema.Column{AsAppGroupDistributionDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_app_group_distribution_data_as_all_group_appGroupDistribConfigs",
				Columns:    []*schema.Column{AsAppGroupDistributionDataColumns[8]},
				RefColumns: []*schema.Column{AsAllGroupColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_app_group_distribution_data_as_market_app_appGroupDistribConfigs",
				Columns:    []*schema.Column{AsAppGroupDistributionDataColumns[9]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsDictColumns holds the columns for the "as_dict" table.
	AsDictColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "code", Type: field.TypeString, Nullable: true},
		{Name: "dict_key", Type: field.TypeInt64, Nullable: true},
		{Name: "dict_value", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt64, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "currversion", Type: field.TypeInt64, Nullable: true},
		{Name: "version", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "dictparent_id", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsDictTable holds the schema information for the "as_dict" table.
	AsDictTable = &schema.Table{
		Name:       "as_dict",
		Columns:    AsDictColumns,
		PrimaryKey: []*schema.Column{AsDictColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_dict_as_dict_childrens",
				Columns:    []*schema.Column{AsDictColumns[15]},
				RefColumns: []*schema.Column{AsDictColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsGroupTenantRelationsColumns holds the columns for the "as_group_tenant_relations" table.
	AsGroupTenantRelationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "type", Type: field.TypeInt64, Nullable: true},
		{Name: "sort", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "serial", Type: field.TypeInt64, Nullable: true},
		{Name: "group_code", Type: field.TypeString, Nullable: true},
		{Name: "expires_time", Type: field.TypeTime, Nullable: true},
		{Name: "is_hide", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
		{Name: "son_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsGroupTenantRelationsTable holds the schema information for the "as_group_tenant_relations" table.
	AsGroupTenantRelationsTable = &schema.Table{
		Name:       "as_group_tenant_relations",
		Columns:    AsGroupTenantRelationsColumns,
		PrimaryKey: []*schema.Column{AsGroupTenantRelationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_group_tenant_relations_as_all_group_allTenants",
				Columns:    []*schema.Column{AsGroupTenantRelationsColumns[13]},
				RefColumns: []*schema.Column{AsAllGroupColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_group_tenant_relations_as_tenant_allGroups",
				Columns:    []*schema.Column{AsGroupTenantRelationsColumns[14]},
				RefColumns: []*schema.Column{AsTenantColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsInnerAgencyColumns holds the columns for the "as_inner_agency" table.
	AsInnerAgencyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "agency_name", Type: field.TypeString},
		{Name: "agency_code", Type: field.TypeString, Nullable: true},
		{Name: "tenant_code", Type: field.TypeString},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsInnerAgencyTable holds the schema information for the "as_inner_agency" table.
	AsInnerAgencyTable = &schema.Table{
		Name:       "as_inner_agency",
		Columns:    AsInnerAgencyColumns,
		PrimaryKey: []*schema.Column{AsInnerAgencyColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_inner_agency_as_inner_agency_childrens",
				Columns:    []*schema.Column{AsInnerAgencyColumns[10]},
				RefColumns: []*schema.Column{AsInnerAgencyColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsInputDataColumns holds the columns for the "as_input_data" table.
	AsInputDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "file_id", Type: field.TypeInt64},
		{Name: "file_name", Type: field.TypeString},
		{Name: "table_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeInt64, Nullable: true},
		{Name: "t_count", Type: field.TypeInt64, Nullable: true},
		{Name: "f_count", Type: field.TypeInt64, Nullable: true},
		{Name: "context", Type: field.TypeString, Nullable: true},
		{Name: "end_time", Type: field.TypeTime, Nullable: true},
		{Name: "total_time", Type: field.TypeInt64, Nullable: true},
		{Name: "tenant_code", Type: field.TypeString, Nullable: true},
		{Name: "import_type", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsInputDataTable holds the schema information for the "as_input_data" table.
	AsInputDataTable = &schema.Table{
		Name:       "as_input_data",
		Columns:    AsInputDataColumns,
		PrimaryKey: []*schema.Column{AsInputDataColumns[0]},
	}
	// AsJobColumns holds the columns for the "as_job" table.
	AsJobColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "job_name", Type: field.TypeString},
		{Name: "tenant_code", Type: field.TypeString},
		{Name: "type", Type: field.TypeInt64, Nullable: true, Default: 1},
		{Name: "sort", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsJobTable holds the schema information for the "as_job" table.
	AsJobTable = &schema.Table{
		Name:       "as_job",
		Columns:    AsJobColumns,
		PrimaryKey: []*schema.Column{AsJobColumns[0]},
	}
	// AsLayerColumns holds the columns for the "as_layer" table.
	AsLayerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "layer", Type: field.TypeInt64, Nullable: true},
		{Name: "width", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "group_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsLayerTable holds the schema information for the "as_layer" table.
	AsLayerTable = &schema.Table{
		Name:       "as_layer",
		Columns:    AsLayerColumns,
		PrimaryKey: []*schema.Column{AsLayerColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_layer_as_all_group_allLayer",
				Columns:    []*schema.Column{AsLayerColumns[9]},
				RefColumns: []*schema.Column{AsAllGroupColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketAppColumns holds the columns for the "as_market_app" table.
	AsMarketAppColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "app_name", Type: field.TypeString, Nullable: true},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "version", Type: field.TypeString, Nullable: true},
		{Name: "contact", Type: field.TypeString, Nullable: true},
		{Name: "contact_name", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "file", Type: field.TypeString, Nullable: true},
		{Name: "sale_status", Type: field.TypeInt64, Nullable: true, Default: 1},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "platform", Type: field.TypeInt64, Nullable: true, Default: 1},
		{Name: "target_user", Type: field.TypeInt64, Nullable: true},
		{Name: "deploy_status", Type: field.TypeInt64, Nullable: true},
		{Name: "deploy_address", Type: field.TypeString, Nullable: true},
		{Name: "deploy_type", Type: field.TypeInt64, Nullable: true, Default: 1},
		{Name: "publish_time", Type: field.TypeTime, Nullable: true},
		{Name: "app_type", Type: field.TypeInt64, Nullable: true},
		{Name: "apply_time", Type: field.TypeTime, Nullable: true},
		{Name: "app_address", Type: field.TypeString, Nullable: true},
		{Name: "app_mail", Type: field.TypeString, Nullable: true},
		{Name: "app_photo", Type: field.TypeString, Nullable: true},
		{Name: "app_field", Type: field.TypeInt64, Nullable: true},
		{Name: "app_category", Type: field.TypeInt64, Nullable: true},
		{Name: "app_project_source", Type: field.TypeInt64, Nullable: true},
		{Name: "app_star", Type: field.TypeInt64},
		{Name: "app_founds_source", Type: field.TypeInt64, Nullable: true},
		{Name: "inner_url", Type: field.TypeString, Nullable: true},
		{Name: "out_url", Type: field.TypeString, Nullable: true},
		{Name: "reform_status", Type: field.TypeInt64},
		{Name: "out_ip_url", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsMarketAppTable holds the schema information for the "as_market_app" table.
	AsMarketAppTable = &schema.Table{
		Name:       "as_market_app",
		Columns:    AsMarketAppColumns,
		PrimaryKey: []*schema.Column{AsMarketAppColumns[0]},
	}
	// AsMarketAppAlertColumns holds the columns for the "as_market_app_alert" table.
	AsMarketAppAlertColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "alert_title", Type: field.TypeString, Nullable: true},
		{Name: "alert_content", Type: field.TypeString, Nullable: true},
		{Name: "alert_business", Type: field.TypeString, Nullable: true},
		{Name: "alert_emergency_level", Type: field.TypeInt64, Nullable: true},
		{Name: "alert_release_time", Type: field.TypeTime, Nullable: true},
		{Name: "alert_role_ids", Type: field.TypeString, Nullable: true},
		{Name: "alert_job_ids", Type: field.TypeString, Nullable: true},
		{Name: "alert_status", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "alert_release_app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketAppAlertTable holds the schema information for the "as_market_app_alert" table.
	AsMarketAppAlertTable = &schema.Table{
		Name:       "as_market_app_alert",
		Columns:    AsMarketAppAlertColumns,
		PrimaryKey: []*schema.Column{AsMarketAppAlertColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_app_alert_as_market_app_appAlerts",
				Columns:    []*schema.Column{AsMarketAppAlertColumns[15]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketAppComponentColumns holds the columns for the "as_market_app_component" table.
	AsMarketAppComponentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "code", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeInt64, Nullable: true},
		{Name: "preview_pic", Type: field.TypeString, Nullable: true},
		{Name: "layout_type", Type: field.TypeString, Nullable: true},
		{Name: "layout_config", Type: field.TypeString, Nullable: true},
		{Name: "tenant_code", Type: field.TypeString, Nullable: true},
		{Name: "source", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketAppComponentTable holds the schema information for the "as_market_app_component" table.
	AsMarketAppComponentTable = &schema.Table{
		Name:       "as_market_app_component",
		Columns:    AsMarketAppComponentColumns,
		PrimaryKey: []*schema.Column{AsMarketAppComponentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_app_component_as_market_app_appComponents",
				Columns:    []*schema.Column{AsMarketAppComponentColumns[16]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketAppComponentTemplateColumns holds the columns for the "as_market_app_component_template" table.
	AsMarketAppComponentTemplateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "config", Type: field.TypeString, Nullable: true},
		{Name: "is_default", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsMarketAppComponentTemplateTable holds the schema information for the "as_market_app_component_template" table.
	AsMarketAppComponentTemplateTable = &schema.Table{
		Name:       "as_market_app_component_template",
		Columns:    AsMarketAppComponentTemplateColumns,
		PrimaryKey: []*schema.Column{AsMarketAppComponentTemplateColumns[0]},
	}
	// AsMarketAppGroupDistributionColumns holds the columns for the "as_market_app_group_distribution" table.
	AsMarketAppGroupDistributionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "use_status", Type: field.TypeInt64, Nullable: true, Default: 1},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "group_id", Type: field.TypeInt64, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketAppGroupDistributionTable holds the schema information for the "as_market_app_group_distribution" table.
	AsMarketAppGroupDistributionTable = &schema.Table{
		Name:       "as_market_app_group_distribution",
		Columns:    AsMarketAppGroupDistributionColumns,
		PrimaryKey: []*schema.Column{AsMarketAppGroupDistributionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_app_group_distribution_as_all_group_appGroupDistribs",
				Columns:    []*schema.Column{AsMarketAppGroupDistributionColumns[10]},
				RefColumns: []*schema.Column{AsAllGroupColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_app_group_distribution_as_market_app_appGroupDistribs",
				Columns:    []*schema.Column{AsMarketAppGroupDistributionColumns[11]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketAppGroupDistributionRelationColumns holds the columns for the "as_market_app_group_distribution_relation" table.
	AsMarketAppGroupDistributionRelationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "relation_id", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "group_id", Type: field.TypeInt64, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketAppGroupDistributionRelationTable holds the schema information for the "as_market_app_group_distribution_relation" table.
	AsMarketAppGroupDistributionRelationTable = &schema.Table{
		Name:       "as_market_app_group_distribution_relation",
		Columns:    AsMarketAppGroupDistributionRelationColumns,
		PrimaryKey: []*schema.Column{AsMarketAppGroupDistributionRelationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_app_group_distribution_relation_as_all_group_appGroupDistribsRelation",
				Columns:    []*schema.Column{AsMarketAppGroupDistributionRelationColumns[8]},
				RefColumns: []*schema.Column{AsAllGroupColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_app_group_distribution_relation_as_market_app_appGroupDistribsRelation",
				Columns:    []*schema.Column{AsMarketAppGroupDistributionRelationColumns[9]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketAppKeySecretColumns holds the columns for the "as_market_app_key_secret" table.
	AsMarketAppKeySecretColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "app_key", Type: field.TypeString, Nullable: true},
		{Name: "app_secret", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketAppKeySecretTable holds the schema information for the "as_market_app_key_secret" table.
	AsMarketAppKeySecretTable = &schema.Table{
		Name:       "as_market_app_key_secret",
		Columns:    AsMarketAppKeySecretColumns,
		PrimaryKey: []*schema.Column{AsMarketAppKeySecretColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_app_key_secret_as_market_app_appKeys",
				Columns:    []*schema.Column{AsMarketAppKeySecretColumns[9]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketAppNoticeColumns holds the columns for the "as_market_app_notice" table.
	AsMarketAppNoticeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "notice_title", Type: field.TypeString, Nullable: true},
		{Name: "notice_content", Type: field.TypeString, Nullable: true},
		{Name: "notice_release_unit_id", Type: field.TypeInt64, Nullable: true},
		{Name: "notice_release_status", Type: field.TypeInt64},
		{Name: "notice_release_time", Type: field.TypeTime, Nullable: true},
		{Name: "notice_role_ids", Type: field.TypeString, Nullable: true},
		{Name: "notice_unit_ids", Type: field.TypeString, Nullable: true},
		{Name: "group_or_unit", Type: field.TypeInt64, Nullable: true},
		{Name: "unit_query_ids", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsMarketAppNoticeTable holds the schema information for the "as_market_app_notice" table.
	AsMarketAppNoticeTable = &schema.Table{
		Name:       "as_market_app_notice",
		Columns:    AsMarketAppNoticeColumns,
		PrimaryKey: []*schema.Column{AsMarketAppNoticeColumns[0]},
	}
	// AsMarketAppPurchaseColumns holds the columns for the "as_market_app_purchase" table.
	AsMarketAppPurchaseColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tenant_id", Type: field.TypeString, Nullable: true},
		{Name: "use_status", Type: field.TypeInt64, Nullable: true, Default: 1},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "group_id", Type: field.TypeInt64, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketAppPurchaseTable holds the schema information for the "as_market_app_purchase" table.
	AsMarketAppPurchaseTable = &schema.Table{
		Name:       "as_market_app_purchase",
		Columns:    AsMarketAppPurchaseColumns,
		PrimaryKey: []*schema.Column{AsMarketAppPurchaseColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_app_purchase_as_all_group_appPurchases",
				Columns:    []*schema.Column{AsMarketAppPurchaseColumns[10]},
				RefColumns: []*schema.Column{AsAllGroupColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_app_purchase_as_market_app_appPurchases",
				Columns:    []*schema.Column{AsMarketAppPurchaseColumns[11]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketAppRoleColumns holds the columns for the "as_market_app_role" table.
	AsMarketAppRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "role_name", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketAppRoleTable holds the schema information for the "as_market_app_role" table.
	AsMarketAppRoleTable = &schema.Table{
		Name:       "as_market_app_role",
		Columns:    AsMarketAppRoleColumns,
		PrimaryKey: []*schema.Column{AsMarketAppRoleColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_app_role_as_market_app_appRoles",
				Columns:    []*schema.Column{AsMarketAppRoleColumns[8]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketAppUserTemplateColumns holds the columns for the "as_market_app_user_template" table.
	AsMarketAppUserTemplateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "use_status", Type: field.TypeInt64, Nullable: true, Default: 1},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "template_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketAppUserTemplateTable holds the schema information for the "as_market_app_user_template" table.
	AsMarketAppUserTemplateTable = &schema.Table{
		Name:       "as_market_app_user_template",
		Columns:    AsMarketAppUserTemplateColumns,
		PrimaryKey: []*schema.Column{AsMarketAppUserTemplateColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_app_user_template_as_market_app_component_template_appUserTemplates",
				Columns:    []*schema.Column{AsMarketAppUserTemplateColumns[8]},
				RefColumns: []*schema.Column{AsMarketAppComponentTemplateColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_app_user_template_as_user_appUserTemplates",
				Columns:    []*schema.Column{AsMarketAppUserTemplateColumns[9]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketMenuColumns holds the columns for the "as_market_menu" table.
	AsMarketMenuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "menu_name", Type: field.TypeString, Nullable: true},
		{Name: "menu_url", Type: field.TypeString, Nullable: true},
		{Name: "menu_column", Type: field.TypeString, Nullable: true},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "https_menu_url", Type: field.TypeString, Nullable: true},
		{Name: "reform_status", Type: field.TypeInt64, Default: 0},
		{Name: "out_ip_menu_url", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketMenuTable holds the schema information for the "as_market_menu" table.
	AsMarketMenuTable = &schema.Table{
		Name:       "as_market_menu",
		Columns:    AsMarketMenuColumns,
		PrimaryKey: []*schema.Column{AsMarketMenuColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_menu_as_market_app_appMenus",
				Columns:    []*schema.Column{AsMarketMenuColumns[15]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_menu_as_market_menu_childrens",
				Columns:    []*schema.Column{AsMarketMenuColumns[16]},
				RefColumns: []*schema.Column{AsMarketMenuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketMenuUserSortColumns holds the columns for the "as_market_menu_user_sort" table.
	AsMarketMenuUserSortColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "sort", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "menu_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketMenuUserSortTable holds the schema information for the "as_market_menu_user_sort" table.
	AsMarketMenuUserSortTable = &schema.Table{
		Name:       "as_market_menu_user_sort",
		Columns:    AsMarketMenuUserSortColumns,
		PrimaryKey: []*schema.Column{AsMarketMenuUserSortColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_menu_user_sort_as_market_menu_UserSorts",
				Columns:    []*schema.Column{AsMarketMenuUserSortColumns[8]},
				RefColumns: []*schema.Column{AsMarketMenuColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_menu_user_sort_as_user_appMenusUserSorts",
				Columns:    []*schema.Column{AsMarketMenuUserSortColumns[9]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketRoleDistributionColumns holds the columns for the "as_market_role_distribution" table.
	AsMarketRoleDistributionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tenant_code", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "agency_id", Type: field.TypeInt64, Nullable: true},
		{Name: "job_id", Type: field.TypeInt64, Nullable: true},
		{Name: "role_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketRoleDistributionTable holds the schema information for the "as_market_role_distribution" table.
	AsMarketRoleDistributionTable = &schema.Table{
		Name:       "as_market_role_distribution",
		Columns:    AsMarketRoleDistributionColumns,
		PrimaryKey: []*schema.Column{AsMarketRoleDistributionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_role_distribution_as_inner_agency_roleDistribs",
				Columns:    []*schema.Column{AsMarketRoleDistributionColumns[8]},
				RefColumns: []*schema.Column{AsInnerAgencyColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_role_distribution_as_job_roleDistribs",
				Columns:    []*schema.Column{AsMarketRoleDistributionColumns[9]},
				RefColumns: []*schema.Column{AsJobColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_role_distribution_as_market_app_role_roleDistribs",
				Columns:    []*schema.Column{AsMarketRoleDistributionColumns[10]},
				RefColumns: []*schema.Column{AsMarketAppRoleColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_role_distribution_as_user_roleDistribs",
				Columns:    []*schema.Column{AsMarketRoleDistributionColumns[11]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketRoleMenuColumns holds the columns for the "as_market_role_menu" table.
	AsMarketRoleMenuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "role_id", Type: field.TypeInt64, Nullable: true},
		{Name: "menu_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketRoleMenuTable holds the schema information for the "as_market_role_menu" table.
	AsMarketRoleMenuTable = &schema.Table{
		Name:       "as_market_role_menu",
		Columns:    AsMarketRoleMenuColumns,
		PrimaryKey: []*schema.Column{AsMarketRoleMenuColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_role_menu_as_market_app_role_roleMenus",
				Columns:    []*schema.Column{AsMarketRoleMenuColumns[7]},
				RefColumns: []*schema.Column{AsMarketAppRoleColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_role_menu_as_market_menu_roleMenus",
				Columns:    []*schema.Column{AsMarketRoleMenuColumns[8]},
				RefColumns: []*schema.Column{AsMarketMenuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMarketUsedAppColumns holds the columns for the "as_market_used_app" table.
	AsMarketUsedAppColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "sort", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMarketUsedAppTable holds the schema information for the "as_market_used_app" table.
	AsMarketUsedAppTable = &schema.Table{
		Name:       "as_market_used_app",
		Columns:    AsMarketUsedAppColumns,
		PrimaryKey: []*schema.Column{AsMarketUsedAppColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_market_used_app_as_market_app_useds",
				Columns:    []*schema.Column{AsMarketUsedAppColumns[9]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_market_used_app_as_user_usedapps",
				Columns:    []*schema.Column{AsMarketUsedAppColumns[9]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsMenuColumns holds the columns for the "as_menu" table.
	AsMenuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "alias", Type: field.TypeString, Nullable: true},
		{Name: "path", Type: field.TypeString, Nullable: true},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt64, Nullable: true},
		{Name: "category", Type: field.TypeInt64},
		{Name: "is_open", Type: field.TypeInt64, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "reform_status", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsMenuTable holds the schema information for the "as_menu" table.
	AsMenuTable = &schema.Table{
		Name:       "as_menu",
		Columns:    AsMenuColumns,
		PrimaryKey: []*schema.Column{AsMenuColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_menu_as_menu_childrens",
				Columns:    []*schema.Column{AsMenuColumns[16]},
				RefColumns: []*schema.Column{AsMenuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsPersonColumns holds the columns for the "as_person" table.
	AsPersonColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tenant_code", Type: field.TypeString, Nullable: true},
		{Name: "real_name", Type: field.TypeString},
		{Name: "id_card", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeInt64, Nullable: true},
		{Name: "user_birthday", Type: field.TypeTime, Nullable: true},
		{Name: "user_email", Type: field.TypeString, Nullable: true},
		{Name: "user_photo", Type: field.TypeString, Nullable: true},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "province", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "street_address", Type: field.TypeString, Nullable: true},
		{Name: "user_code", Type: field.TypeString, Nullable: true},
		{Name: "is_master", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Unique: true},
	}
	// AsPersonTable holds the schema information for the "as_person" table.
	AsPersonTable = &schema.Table{
		Name:       "as_person",
		Columns:    AsPersonColumns,
		PrimaryKey: []*schema.Column{AsPersonColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_person_as_user_person",
				Columns:    []*schema.Column{AsPersonColumns[20]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// AsPersonSingleColumns holds the columns for the "as_person_single" table.
	AsPersonSingleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "real_name", Type: field.TypeString},
		{Name: "id_card", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeInt64, Nullable: true},
		{Name: "user_birthday", Type: field.TypeTime, Nullable: true},
		{Name: "user_email", Type: field.TypeString, Nullable: true},
		{Name: "user_photo", Type: field.TypeString, Nullable: true},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "province", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "street_address", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsPersonSingleTable holds the schema information for the "as_person_single" table.
	AsPersonSingleTable = &schema.Table{
		Name:       "as_person_single",
		Columns:    AsPersonSingleColumns,
		PrimaryKey: []*schema.Column{AsPersonSingleColumns[0]},
	}
	// AsPropertiesColumns holds the columns for the "as_properties" table.
	AsPropertiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "properties_name", Type: field.TypeString},
		{Name: "group_id", Type: field.TypeInt64},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsPropertiesTable holds the schema information for the "as_properties" table.
	AsPropertiesTable = &schema.Table{
		Name:       "as_properties",
		Columns:    AsPropertiesColumns,
		PrimaryKey: []*schema.Column{AsPropertiesColumns[0]},
	}
	// AsPropertiesDistributionColumns holds the columns for the "as_properties_distribution" table.
	AsPropertiesDistributionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "properties_id", Type: field.TypeInt64, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsPropertiesDistributionTable holds the schema information for the "as_properties_distribution" table.
	AsPropertiesDistributionTable = &schema.Table{
		Name:       "as_properties_distribution",
		Columns:    AsPropertiesDistributionColumns,
		PrimaryKey: []*schema.Column{AsPropertiesDistributionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_properties_distribution_as_properties_allTenants",
				Columns:    []*schema.Column{AsPropertiesDistributionColumns[7]},
				RefColumns: []*schema.Column{AsPropertiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_properties_distribution_as_tenant_allproperties",
				Columns:    []*schema.Column{AsPropertiesDistributionColumns[8]},
				RefColumns: []*schema.Column{AsTenantColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsRedeployDataColumns holds the columns for the "as_redeploy_data" table.
	AsRedeployDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "application", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "app_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsRedeployDataTable holds the schema information for the "as_redeploy_data" table.
	AsRedeployDataTable = &schema.Table{
		Name:       "as_redeploy_data",
		Columns:    AsRedeployDataColumns,
		PrimaryKey: []*schema.Column{AsRedeployDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_redeploy_data_as_market_app_appRedeploys",
				Columns:    []*schema.Column{AsRedeployDataColumns[8]},
				RefColumns: []*schema.Column{AsMarketAppColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsRoleColumns holds the columns for the "as_role" table.
	AsRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "sort", Type: field.TypeInt64},
		{Name: "role_alias", Type: field.TypeString, Nullable: true},
		{Name: "role_name", Type: field.TypeString, Nullable: true},
		{Name: "role_description", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsRoleTable holds the schema information for the "as_role" table.
	AsRoleTable = &schema.Table{
		Name:       "as_role",
		Columns:    AsRoleColumns,
		PrimaryKey: []*schema.Column{AsRoleColumns[0]},
	}
	// AsTenantColumns holds the columns for the "as_tenant" table.
	AsTenantColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tenant_type", Type: field.TypeInt64},
		{Name: "tenant_name", Type: field.TypeString},
		{Name: "tenant_code", Type: field.TypeString},
		{Name: "theme", Type: field.TypeString, Nullable: true, Default: "default"},
		{Name: "is_virtual", Type: field.TypeInt64, Default: 1},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsTenantTable holds the schema information for the "as_tenant" table.
	AsTenantTable = &schema.Table{
		Name:       "as_tenant",
		Columns:    AsTenantColumns,
		PrimaryKey: []*schema.Column{AsTenantColumns[0]},
	}
	// AsTenantAttrColumns holds the columns for the "as_tenant_attr" table.
	AsTenantAttrColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "attr_name", Type: field.TypeString},
		{Name: "attr_remark", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsTenantAttrTable holds the schema information for the "as_tenant_attr" table.
	AsTenantAttrTable = &schema.Table{
		Name:       "as_tenant_attr",
		Columns:    AsTenantAttrColumns,
		PrimaryKey: []*schema.Column{AsTenantAttrColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_tenant_attr_as_tenant_attr_childrens",
				Columns:    []*schema.Column{AsTenantAttrColumns[9]},
				RefColumns: []*schema.Column{AsTenantAttrColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsTenantAttrRoleColumns holds the columns for the "as_tenant_attr_role" table.
	AsTenantAttrRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "is_default", Type: field.TypeInt64, Default: 0},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "role_id", Type: field.TypeInt64, Nullable: true},
		{Name: "attr_id", Type: field.TypeInt64, Nullable: true},
	}
	// AsTenantAttrRoleTable holds the schema information for the "as_tenant_attr_role" table.
	AsTenantAttrRoleTable = &schema.Table{
		Name:       "as_tenant_attr_role",
		Columns:    AsTenantAttrRoleColumns,
		PrimaryKey: []*schema.Column{AsTenantAttrRoleColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_tenant_attr_role_as_role_attrRoles",
				Columns:    []*schema.Column{AsTenantAttrRoleColumns[8]},
				RefColumns: []*schema.Column{AsRoleColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "as_tenant_attr_role_as_tenant_attr_attrRoles",
				Columns:    []*schema.Column{AsTenantAttrRoleColumns[9]},
				RefColumns: []*schema.Column{AsTenantAttrColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsTenantIconColumns holds the columns for the "as_tenant_icon" table.
	AsTenantIconColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tenant_code", Type: field.TypeString, Nullable: true},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsTenantIconTable holds the schema information for the "as_tenant_icon" table.
	AsTenantIconTable = &schema.Table{
		Name:       "as_tenant_icon",
		Columns:    AsTenantIconColumns,
		PrimaryKey: []*schema.Column{AsTenantIconColumns[0]},
	}
	// AsUnitColumns holds the columns for the "as_unit" table.
	AsUnitColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "unit_name", Type: field.TypeString},
		{Name: "unit_name_en", Type: field.TypeString, Nullable: true},
		{Name: "organization_form", Type: field.TypeInt64, Nullable: true},
		{Name: "unit_type", Type: field.TypeInt64, Nullable: true},
		{Name: "parent_node_name", Type: field.TypeString, Nullable: true},
		{Name: "charge_section_id", Type: field.TypeInt64, Nullable: true},
		{Name: "charge_section_code", Type: field.TypeString, Nullable: true},
		{Name: "charge_section_name", Type: field.TypeString, Nullable: true},
		{Name: "local_financial_code", Type: field.TypeString, Nullable: true},
		{Name: "local_financial_name", Type: field.TypeString, Nullable: true},
		{Name: "local_financial_id", Type: field.TypeString, Nullable: true},
		{Name: "office_administration_code", Type: field.TypeString, Nullable: true},
		{Name: "office_administration_name", Type: field.TypeString, Nullable: true},
		{Name: "administration_division_code", Type: field.TypeString, Nullable: true},
		{Name: "administration_division_name", Type: field.TypeString, Nullable: true},
		{Name: "budget_code", Type: field.TypeInt64, Nullable: true},
		{Name: "college_code", Type: field.TypeString, Nullable: true},
		{Name: "organization_code", Type: field.TypeString, Nullable: true},
		{Name: "unit_type_code", Type: field.TypeInt64, Nullable: true},
		{Name: "unit_type_name", Type: field.TypeInt64, Nullable: true},
		{Name: "unit_basic_property", Type: field.TypeInt64, Nullable: true},
		{Name: "social_credit_code", Type: field.TypeString, Nullable: true},
		{Name: "budget_unit_name", Type: field.TypeString, Nullable: true},
		{Name: "budget_unit_code", Type: field.TypeString, Nullable: true},
		{Name: "budget_management_level", Type: field.TypeInt64, Nullable: true},
		{Name: "firm_name", Type: field.TypeString, Nullable: true},
		{Name: "firm_code", Type: field.TypeString, Nullable: true},
		{Name: "telephone_number", Type: field.TypeString, Nullable: true},
		{Name: "phone_number", Type: field.TypeString, Nullable: true},
		{Name: "fax_number", Type: field.TypeString, Nullable: true},
		{Name: "email_address", Type: field.TypeString, Nullable: true},
		{Name: "province", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "county", Type: field.TypeString, Nullable: true},
		{Name: "street_address", Type: field.TypeString, Nullable: true},
		{Name: "postal_code", Type: field.TypeString, Nullable: true},
		{Name: "fund_supply_mode_name", Type: field.TypeInt64, Nullable: true},
		{Name: "fund_supply_mode_code", Type: field.TypeInt64, Nullable: true},
		{Name: "administration_level_name", Type: field.TypeInt64, Nullable: true},
		{Name: "administration_level_type", Type: field.TypeInt64, Nullable: true},
		{Name: "department_category_name", Type: field.TypeInt64, Nullable: true},
		{Name: "business_department_classification_code", Type: field.TypeInt64, Nullable: true},
		{Name: "principal", Type: field.TypeString, Nullable: true},
		{Name: "contact", Type: field.TypeString, Nullable: true},
		{Name: "corporate_representative", Type: field.TypeString, Nullable: true},
		{Name: "economic_type", Type: field.TypeInt64, Nullable: true},
		{Name: "financial_affiliation", Type: field.TypeString, Nullable: true},
		{Name: "financial_unit", Type: field.TypeInt64, Nullable: true},
		{Name: "vertical_unit", Type: field.TypeInt64, Nullable: true},
		{Name: "virtual_unit", Type: field.TypeInt64, Nullable: true},
		{Name: "accounting_system", Type: field.TypeInt64, Nullable: true},
		{Name: "corporate_tag", Type: field.TypeString, Nullable: true},
		{Name: "maintainer_mark", Type: field.TypeString, Nullable: true},
		{Name: "supplier_mark", Type: field.TypeString, Nullable: true},
		{Name: "manufacture_mark", Type: field.TypeString, Nullable: true},
		{Name: "asset_disposal_agency_tag", Type: field.TypeString, Nullable: true},
		{Name: "state_asset_management_company", Type: field.TypeString, Nullable: true},
		{Name: "institution_number", Type: field.TypeInt64, Nullable: true},
		{Name: "authorized_number", Type: field.TypeInt64, Nullable: true},
		{Name: "of_side_number", Type: field.TypeInt64, Nullable: true},
		{Name: "institution_authority", Type: field.TypeString, Nullable: true},
		{Name: "administration_authority", Type: field.TypeString, Nullable: true},
		{Name: "enable_time", Type: field.TypeTime, Nullable: true},
		{Name: "disable_time", Type: field.TypeTime, Nullable: true},
		{Name: "seal_time", Type: field.TypeTime, Nullable: true},
		{Name: "unit_remark", Type: field.TypeString, Nullable: true},
		{Name: "asset_download_status", Type: field.TypeString, Nullable: true},
		{Name: "latitude_and_longitude", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt64, Nullable: true},
		{Name: "organ_code", Type: field.TypeString, Nullable: true},
		{Name: "had_inner_number", Type: field.TypeInt64, Nullable: true},
		{Name: "approve_inner_number", Type: field.TypeInt64, Nullable: true},
		{Name: "img", Type: field.TypeString, Nullable: true},
		{Name: "link_man", Type: field.TypeString, Nullable: true},
		{Name: "link_phone", Type: field.TypeString, Nullable: true},
		{Name: "unit_code", Type: field.TypeString, Nullable: true},
		{Name: "authority_total", Type: field.TypeInt64, Nullable: true},
		{Name: "staff_on_active_duty", Type: field.TypeInt64, Nullable: true},
		{Name: "retired_staff", Type: field.TypeInt64, Nullable: true},
		{Name: "other_staff", Type: field.TypeInt64, Nullable: true},
		{Name: "is_virtual", Type: field.TypeString, Default: "0"},
		{Name: "unit_reform", Type: field.TypeInt64, Nullable: true},
		{Name: "person_expenditure", Type: field.TypeInt64, Nullable: true},
		{Name: "institution_type", Type: field.TypeString, Nullable: true},
		{Name: "department_identification", Type: field.TypeInt64, Nullable: true},
		{Name: "total_headcount", Type: field.TypeInt64, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeInt64, Unique: true, Nullable: true},
	}
	// AsUnitTable holds the schema information for the "as_unit" table.
	AsUnitTable = &schema.Table{
		Name:       "as_unit",
		Columns:    AsUnitColumns,
		PrimaryKey: []*schema.Column{AsUnitColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_unit_as_tenant_unit",
				Columns:    []*schema.Column{AsUnitColumns[93]},
				RefColumns: []*schema.Column{AsTenantColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsUserColumns holds the columns for the "as_user" table.
	AsUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "tenant_code", Type: field.TypeString, Nullable: true},
		{Name: "pwd", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString, Nullable: true},
		{Name: "is_admin", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_applying_state", Type: field.TypeInt64, Default: 0},
		{Name: "is_master", Type: field.TypeInt64, Nullable: true, Default: 1},
		{Name: "is_created", Type: field.TypeInt64, Default: 3},
		{Name: "open_id", Type: field.TypeString, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// AsUserTable holds the schema information for the "as_user" table.
	AsUserTable = &schema.Table{
		Name:       "as_user",
		Columns:    AsUserColumns,
		PrimaryKey: []*schema.Column{AsUserColumns[0]},
	}
	// AsWorkingDataColumns holds the columns for the "as_working_data" table.
	AsWorkingDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "app_id", Type: field.TypeInt64},
		{Name: "type", Type: field.TypeInt64},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// AsWorkingDataTable holds the schema information for the "as_working_data" table.
	AsWorkingDataTable = &schema.Table{
		Name:       "as_working_data",
		Columns:    AsWorkingDataColumns,
		PrimaryKey: []*schema.Column{AsWorkingDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_working_data_as_user_workingDatas",
				Columns:    []*schema.Column{AsWorkingDataColumns[9]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// BaseinfoAdministrativeAreaAllColumns holds the columns for the "baseinfo_administrative_area_all" table.
	BaseinfoAdministrativeAreaAllColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "code", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "province", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "area", Type: field.TypeString},
		{Name: "town", Type: field.TypeString},
		{Name: "all_name", Type: field.TypeString},
		{Name: "type", Type: field.TypeInt32, Nullable: true, Default: 1},
		{Name: "ts_version", Type: field.TypeInt32, Nullable: true, Default: 1},
		{Name: "is_deleted", Type: field.TypeInt64, Default: 0},
		{Name: "status", Type: field.TypeInt64, Nullable: true, Default: 2},
		{Name: "create_user", Type: field.TypeInt64, Nullable: true},
		{Name: "update_user", Type: field.TypeInt64, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
		{Name: "pid", Type: field.TypeInt64, Nullable: true},
	}
	// BaseinfoAdministrativeAreaAllTable holds the schema information for the "baseinfo_administrative_area_all" table.
	BaseinfoAdministrativeAreaAllTable = &schema.Table{
		Name:       "baseinfo_administrative_area_all",
		Columns:    BaseinfoAdministrativeAreaAllColumns,
		PrimaryKey: []*schema.Column{BaseinfoAdministrativeAreaAllColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "baseinfo_administrative_area_all_baseinfo_administrative_area_all_childrens",
				Columns:    []*schema.Column{BaseinfoAdministrativeAreaAllColumns[16]},
				RefColumns: []*schema.Column{BaseinfoAdministrativeAreaAllColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AsAgencyJobColumns holds the columns for the "as_agency_job" table.
	AsAgencyJobColumns = []*schema.Column{
		{Name: "agency_id", Type: field.TypeInt64},
		{Name: "job_id", Type: field.TypeInt64},
	}
	// AsAgencyJobTable holds the schema information for the "as_agency_job" table.
	AsAgencyJobTable = &schema.Table{
		Name:       "as_agency_job",
		Columns:    AsAgencyJobColumns,
		PrimaryKey: []*schema.Column{AsAgencyJobColumns[0], AsAgencyJobColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_agency_job_agency_id",
				Columns:    []*schema.Column{AsAgencyJobColumns[0]},
				RefColumns: []*schema.Column{AsInnerAgencyColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "as_agency_job_job_id",
				Columns:    []*schema.Column{AsAgencyJobColumns[1]},
				RefColumns: []*schema.Column{AsJobColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AsAgencyUserColumns holds the columns for the "as_agency_user" table.
	AsAgencyUserColumns = []*schema.Column{
		{Name: "agency_id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// AsAgencyUserTable holds the schema information for the "as_agency_user" table.
	AsAgencyUserTable = &schema.Table{
		Name:       "as_agency_user",
		Columns:    AsAgencyUserColumns,
		PrimaryKey: []*schema.Column{AsAgencyUserColumns[0], AsAgencyUserColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_agency_user_agency_id",
				Columns:    []*schema.Column{AsAgencyUserColumns[0]},
				RefColumns: []*schema.Column{AsInnerAgencyColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "as_agency_user_user_id",
				Columns:    []*schema.Column{AsAgencyUserColumns[1]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AsAgencyPersonColumns holds the columns for the "as_agency_person" table.
	AsAgencyPersonColumns = []*schema.Column{
		{Name: "agency_id", Type: field.TypeInt64},
		{Name: "person_id", Type: field.TypeInt64},
	}
	// AsAgencyPersonTable holds the schema information for the "as_agency_person" table.
	AsAgencyPersonTable = &schema.Table{
		Name:       "as_agency_person",
		Columns:    AsAgencyPersonColumns,
		PrimaryKey: []*schema.Column{AsAgencyPersonColumns[0], AsAgencyPersonColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_agency_person_agency_id",
				Columns:    []*schema.Column{AsAgencyPersonColumns[0]},
				RefColumns: []*schema.Column{AsInnerAgencyColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "as_agency_person_person_id",
				Columns:    []*schema.Column{AsAgencyPersonColumns[1]},
				RefColumns: []*schema.Column{AsPersonColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AsJobPersonColumns holds the columns for the "as_job_person" table.
	AsJobPersonColumns = []*schema.Column{
		{Name: "job_id", Type: field.TypeInt64},
		{Name: "person_id", Type: field.TypeInt64},
	}
	// AsJobPersonTable holds the schema information for the "as_job_person" table.
	AsJobPersonTable = &schema.Table{
		Name:       "as_job_person",
		Columns:    AsJobPersonColumns,
		PrimaryKey: []*schema.Column{AsJobPersonColumns[0], AsJobPersonColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_job_person_job_id",
				Columns:    []*schema.Column{AsJobPersonColumns[0]},
				RefColumns: []*schema.Column{AsJobColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "as_job_person_person_id",
				Columns:    []*schema.Column{AsJobPersonColumns[1]},
				RefColumns: []*schema.Column{AsPersonColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AsMenuRoleColumns holds the columns for the "as_menu_role" table.
	AsMenuRoleColumns = []*schema.Column{
		{Name: "menu_id", Type: field.TypeInt64},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// AsMenuRoleTable holds the schema information for the "as_menu_role" table.
	AsMenuRoleTable = &schema.Table{
		Name:       "as_menu_role",
		Columns:    AsMenuRoleColumns,
		PrimaryKey: []*schema.Column{AsMenuRoleColumns[0], AsMenuRoleColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_menu_role_menu_id",
				Columns:    []*schema.Column{AsMenuRoleColumns[0]},
				RefColumns: []*schema.Column{AsMenuColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "as_menu_role_role_id",
				Columns:    []*schema.Column{AsMenuRoleColumns[1]},
				RefColumns: []*schema.Column{AsRoleColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AsRoleJobColumns holds the columns for the "as_role_job" table.
	AsRoleJobColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeInt64},
		{Name: "job_id", Type: field.TypeInt64},
	}
	// AsRoleJobTable holds the schema information for the "as_role_job" table.
	AsRoleJobTable = &schema.Table{
		Name:       "as_role_job",
		Columns:    AsRoleJobColumns,
		PrimaryKey: []*schema.Column{AsRoleJobColumns[0], AsRoleJobColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_role_job_role_id",
				Columns:    []*schema.Column{AsRoleJobColumns[0]},
				RefColumns: []*schema.Column{AsRoleColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "as_role_job_job_id",
				Columns:    []*schema.Column{AsRoleJobColumns[1]},
				RefColumns: []*schema.Column{AsJobColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AsUserRoleColumns holds the columns for the "as_user_role" table.
	AsUserRoleColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// AsUserRoleTable holds the schema information for the "as_user_role" table.
	AsUserRoleTable = &schema.Table{
		Name:       "as_user_role",
		Columns:    AsUserRoleColumns,
		PrimaryKey: []*schema.Column{AsUserRoleColumns[0], AsUserRoleColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_user_role_user_id",
				Columns:    []*schema.Column{AsUserRoleColumns[0]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "as_user_role_role_id",
				Columns:    []*schema.Column{AsUserRoleColumns[1]},
				RefColumns: []*schema.Column{AsRoleColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// AsUserJobColumns holds the columns for the "as_user_job" table.
	AsUserJobColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "job_id", Type: field.TypeInt64},
	}
	// AsUserJobTable holds the schema information for the "as_user_job" table.
	AsUserJobTable = &schema.Table{
		Name:       "as_user_job",
		Columns:    AsUserJobColumns,
		PrimaryKey: []*schema.Column{AsUserJobColumns[0], AsUserJobColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "as_user_job_user_id",
				Columns:    []*schema.Column{AsUserJobColumns[0]},
				RefColumns: []*schema.Column{AsUserColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "as_user_job_job_id",
				Columns:    []*schema.Column{AsUserJobColumns[1]},
				RefColumns: []*schema.Column{AsJobColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AsAllGroupTable,
		AsAppGroupDistributionDataTable,
		AsDictTable,
		AsGroupTenantRelationsTable,
		AsInnerAgencyTable,
		AsInputDataTable,
		AsJobTable,
		AsLayerTable,
		AsMarketAppTable,
		AsMarketAppAlertTable,
		AsMarketAppComponentTable,
		AsMarketAppComponentTemplateTable,
		AsMarketAppGroupDistributionTable,
		AsMarketAppGroupDistributionRelationTable,
		AsMarketAppKeySecretTable,
		AsMarketAppNoticeTable,
		AsMarketAppPurchaseTable,
		AsMarketAppRoleTable,
		AsMarketAppUserTemplateTable,
		AsMarketMenuTable,
		AsMarketMenuUserSortTable,
		AsMarketRoleDistributionTable,
		AsMarketRoleMenuTable,
		AsMarketUsedAppTable,
		AsMenuTable,
		AsPersonTable,
		AsPersonSingleTable,
		AsPropertiesTable,
		AsPropertiesDistributionTable,
		AsRedeployDataTable,
		AsRoleTable,
		AsTenantTable,
		AsTenantAttrTable,
		AsTenantAttrRoleTable,
		AsTenantIconTable,
		AsUnitTable,
		AsUserTable,
		AsWorkingDataTable,
		BaseinfoAdministrativeAreaAllTable,
		AsAgencyJobTable,
		AsAgencyUserTable,
		AsAgencyPersonTable,
		AsJobPersonTable,
		AsMenuRoleTable,
		AsRoleJobTable,
		AsUserRoleTable,
		AsUserJobTable,
	}
)

func init() {
	AsAllGroupTable.Annotation = &entsql.Annotation{
		Table: "as_all_group",
	}
	AsAppGroupDistributionDataTable.ForeignKeys[0].RefTable = AsAllGroupTable
	AsAppGroupDistributionDataTable.ForeignKeys[1].RefTable = AsMarketAppTable
	AsAppGroupDistributionDataTable.Annotation = &entsql.Annotation{
		Table: "as_app_group_distribution_data",
	}
	AsDictTable.ForeignKeys[0].RefTable = AsDictTable
	AsDictTable.Annotation = &entsql.Annotation{
		Table: "as_dict",
	}
	AsGroupTenantRelationsTable.ForeignKeys[0].RefTable = AsAllGroupTable
	AsGroupTenantRelationsTable.ForeignKeys[1].RefTable = AsTenantTable
	AsGroupTenantRelationsTable.Annotation = &entsql.Annotation{
		Table: "as_group_tenant_relations",
	}
	AsInnerAgencyTable.ForeignKeys[0].RefTable = AsInnerAgencyTable
	AsInnerAgencyTable.Annotation = &entsql.Annotation{
		Table: "as_inner_agency",
	}
	AsInputDataTable.Annotation = &entsql.Annotation{
		Table: "as_input_data",
	}
	AsJobTable.Annotation = &entsql.Annotation{
		Table: "as_job",
	}
	AsLayerTable.ForeignKeys[0].RefTable = AsAllGroupTable
	AsLayerTable.Annotation = &entsql.Annotation{
		Table: "as_layer",
	}
	AsMarketAppTable.Annotation = &entsql.Annotation{
		Table: "as_market_app",
	}
	AsMarketAppAlertTable.ForeignKeys[0].RefTable = AsMarketAppTable
	AsMarketAppAlertTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_alert",
	}
	AsMarketAppComponentTable.ForeignKeys[0].RefTable = AsMarketAppTable
	AsMarketAppComponentTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_component",
	}
	AsMarketAppComponentTemplateTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_component_template",
	}
	AsMarketAppGroupDistributionTable.ForeignKeys[0].RefTable = AsAllGroupTable
	AsMarketAppGroupDistributionTable.ForeignKeys[1].RefTable = AsMarketAppTable
	AsMarketAppGroupDistributionTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_group_distribution",
	}
	AsMarketAppGroupDistributionRelationTable.ForeignKeys[0].RefTable = AsAllGroupTable
	AsMarketAppGroupDistributionRelationTable.ForeignKeys[1].RefTable = AsMarketAppTable
	AsMarketAppGroupDistributionRelationTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_group_distribution_relation",
	}
	AsMarketAppKeySecretTable.ForeignKeys[0].RefTable = AsMarketAppTable
	AsMarketAppKeySecretTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_key_secret",
	}
	AsMarketAppNoticeTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_notice",
	}
	AsMarketAppPurchaseTable.ForeignKeys[0].RefTable = AsAllGroupTable
	AsMarketAppPurchaseTable.ForeignKeys[1].RefTable = AsMarketAppTable
	AsMarketAppPurchaseTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_purchase",
	}
	AsMarketAppRoleTable.ForeignKeys[0].RefTable = AsMarketAppTable
	AsMarketAppRoleTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_role",
	}
	AsMarketAppUserTemplateTable.ForeignKeys[0].RefTable = AsMarketAppComponentTemplateTable
	AsMarketAppUserTemplateTable.ForeignKeys[1].RefTable = AsUserTable
	AsMarketAppUserTemplateTable.Annotation = &entsql.Annotation{
		Table: "as_market_app_user_template",
	}
	AsMarketMenuTable.ForeignKeys[0].RefTable = AsMarketAppTable
	AsMarketMenuTable.ForeignKeys[1].RefTable = AsMarketMenuTable
	AsMarketMenuTable.Annotation = &entsql.Annotation{
		Table: "as_market_menu",
	}
	AsMarketMenuUserSortTable.ForeignKeys[0].RefTable = AsMarketMenuTable
	AsMarketMenuUserSortTable.ForeignKeys[1].RefTable = AsUserTable
	AsMarketMenuUserSortTable.Annotation = &entsql.Annotation{
		Table: "as_market_menu_user_sort",
	}
	AsMarketRoleDistributionTable.ForeignKeys[0].RefTable = AsInnerAgencyTable
	AsMarketRoleDistributionTable.ForeignKeys[1].RefTable = AsJobTable
	AsMarketRoleDistributionTable.ForeignKeys[2].RefTable = AsMarketAppRoleTable
	AsMarketRoleDistributionTable.ForeignKeys[3].RefTable = AsUserTable
	AsMarketRoleDistributionTable.Annotation = &entsql.Annotation{
		Table: "as_market_role_distribution",
	}
	AsMarketRoleMenuTable.ForeignKeys[0].RefTable = AsMarketAppRoleTable
	AsMarketRoleMenuTable.ForeignKeys[1].RefTable = AsMarketMenuTable
	AsMarketRoleMenuTable.Annotation = &entsql.Annotation{
		Table: "as_market_role_menu",
	}
	AsMarketUsedAppTable.ForeignKeys[0].RefTable = AsMarketAppTable
	AsMarketUsedAppTable.ForeignKeys[1].RefTable = AsUserTable
	AsMarketUsedAppTable.Annotation = &entsql.Annotation{
		Table: "as_market_used_app",
	}
	AsMenuTable.ForeignKeys[0].RefTable = AsMenuTable
	AsMenuTable.Annotation = &entsql.Annotation{
		Table: "as_menu",
	}
	AsPersonTable.ForeignKeys[0].RefTable = AsUserTable
	AsPersonTable.Annotation = &entsql.Annotation{
		Table: "as_person",
	}
	AsPersonSingleTable.Annotation = &entsql.Annotation{
		Table: "as_person_single",
	}
	AsPropertiesTable.Annotation = &entsql.Annotation{
		Table: "as_properties",
	}
	AsPropertiesDistributionTable.ForeignKeys[0].RefTable = AsPropertiesTable
	AsPropertiesDistributionTable.ForeignKeys[1].RefTable = AsTenantTable
	AsPropertiesDistributionTable.Annotation = &entsql.Annotation{
		Table: "as_properties_distribution",
	}
	AsRedeployDataTable.ForeignKeys[0].RefTable = AsMarketAppTable
	AsRedeployDataTable.Annotation = &entsql.Annotation{
		Table: "as_redeploy_data",
	}
	AsRoleTable.Annotation = &entsql.Annotation{
		Table: "as_role",
	}
	AsTenantTable.Annotation = &entsql.Annotation{
		Table: "as_tenant",
	}
	AsTenantAttrTable.ForeignKeys[0].RefTable = AsTenantAttrTable
	AsTenantAttrTable.Annotation = &entsql.Annotation{
		Table: "as_tenant_attr",
	}
	AsTenantAttrRoleTable.ForeignKeys[0].RefTable = AsRoleTable
	AsTenantAttrRoleTable.ForeignKeys[1].RefTable = AsTenantAttrTable
	AsTenantAttrRoleTable.Annotation = &entsql.Annotation{
		Table: "as_tenant_attr_role",
	}
	AsTenantIconTable.Annotation = &entsql.Annotation{
		Table: "as_tenant_icon",
	}
	AsUnitTable.ForeignKeys[0].RefTable = AsTenantTable
	AsUnitTable.Annotation = &entsql.Annotation{
		Table: "as_unit",
	}
	AsUserTable.Annotation = &entsql.Annotation{
		Table: "as_user",
	}
	AsWorkingDataTable.ForeignKeys[0].RefTable = AsUserTable
	AsWorkingDataTable.Annotation = &entsql.Annotation{
		Table: "as_working_data",
	}
	BaseinfoAdministrativeAreaAllTable.ForeignKeys[0].RefTable = BaseinfoAdministrativeAreaAllTable
	BaseinfoAdministrativeAreaAllTable.Annotation = &entsql.Annotation{
		Table: "baseinfo_administrative_area_all",
	}
	AsAgencyJobTable.ForeignKeys[0].RefTable = AsInnerAgencyTable
	AsAgencyJobTable.ForeignKeys[1].RefTable = AsJobTable
	AsAgencyUserTable.ForeignKeys[0].RefTable = AsInnerAgencyTable
	AsAgencyUserTable.ForeignKeys[1].RefTable = AsUserTable
	AsAgencyPersonTable.ForeignKeys[0].RefTable = AsInnerAgencyTable
	AsAgencyPersonTable.ForeignKeys[1].RefTable = AsPersonTable
	AsJobPersonTable.ForeignKeys[0].RefTable = AsJobTable
	AsJobPersonTable.ForeignKeys[1].RefTable = AsPersonTable
	AsMenuRoleTable.ForeignKeys[0].RefTable = AsMenuTable
	AsMenuRoleTable.ForeignKeys[1].RefTable = AsRoleTable
	AsRoleJobTable.ForeignKeys[0].RefTable = AsRoleTable
	AsRoleJobTable.ForeignKeys[1].RefTable = AsJobTable
	AsUserRoleTable.ForeignKeys[0].RefTable = AsUserTable
	AsUserRoleTable.ForeignKeys[1].RefTable = AsRoleTable
	AsUserJobTable.ForeignKeys[0].RefTable = AsUserTable
	AsUserJobTable.ForeignKeys[1].RefTable = AsJobTable
}
