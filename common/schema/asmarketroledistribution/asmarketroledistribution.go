// Code generated by entc, DO NOT EDIT.

package asmarketroledistribution

import (
	"orginone/common/tools/date"
)

const (
	// Label holds the string label denoting the asmarketroledistribution type in the database.
	Label = "as_market_role_distribution"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRoleID holds the string denoting the role_id field in the database.
	FieldRoleID = "role_id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldAgencyID holds the string denoting the agency_id field in the database.
	FieldAgencyID = "agency_id"
	// FieldJobID holds the string denoting the job_id field in the database.
	FieldJobID = "job_id"
	// FieldTenantCode holds the string denoting the tenant_code field in the database.
	FieldTenantCode = "tenant_code"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreateUser holds the string denoting the create_user field in the database.
	FieldCreateUser = "create_user"
	// FieldUpdateUser holds the string denoting the update_user field in the database.
	FieldUpdateUser = "update_user"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// EdgeUserx holds the string denoting the userx edge name in mutations.
	EdgeUserx = "userx"
	// EdgeAgencyx holds the string denoting the agencyx edge name in mutations.
	EdgeAgencyx = "agencyx"
	// EdgeJobx holds the string denoting the jobx edge name in mutations.
	EdgeJobx = "jobx"
	// EdgeRolex holds the string denoting the rolex edge name in mutations.
	EdgeRolex = "rolex"
	// Table holds the table name of the asmarketroledistribution in the database.
	Table = "as_market_role_distribution"
	// UserxTable is the table that holds the userx relation/edge.
	UserxTable = "as_market_role_distribution"
	// UserxInverseTable is the table name for the AsUser entity.
	// It exists in this package in order to avoid circular dependency with the "asuser" package.
	UserxInverseTable = "as_user"
	// UserxColumn is the table column denoting the userx relation/edge.
	UserxColumn = "user_id"
	// AgencyxTable is the table that holds the agencyx relation/edge.
	AgencyxTable = "as_market_role_distribution"
	// AgencyxInverseTable is the table name for the AsInnerAgency entity.
	// It exists in this package in order to avoid circular dependency with the "asinneragency" package.
	AgencyxInverseTable = "as_inner_agency"
	// AgencyxColumn is the table column denoting the agencyx relation/edge.
	AgencyxColumn = "agency_id"
	// JobxTable is the table that holds the jobx relation/edge.
	JobxTable = "as_market_role_distribution"
	// JobxInverseTable is the table name for the AsJob entity.
	// It exists in this package in order to avoid circular dependency with the "asjob" package.
	JobxInverseTable = "as_job"
	// JobxColumn is the table column denoting the jobx relation/edge.
	JobxColumn = "job_id"
	// RolexTable is the table that holds the rolex relation/edge.
	RolexTable = "as_market_role_distribution"
	// RolexInverseTable is the table name for the AsMarketAppRole entity.
	// It exists in this package in order to avoid circular dependency with the "asmarketapprole" package.
	RolexInverseTable = "as_market_app_role"
	// RolexColumn is the table column denoting the rolex relation/edge.
	RolexColumn = "role_id"
)

// Columns holds all SQL columns for asmarketroledistribution fields.
var Columns = []string{
	FieldID,
	FieldRoleID,
	FieldUserID,
	FieldAgencyID,
	FieldJobID,
	FieldTenantCode,
	FieldIsDeleted,
	FieldStatus,
	FieldCreateUser,
	FieldUpdateUser,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsDeleted holds the default value on creation for the "is_deleted" field.
	DefaultIsDeleted int64
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int64
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() date.DateTime
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() date.DateTime
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() date.DateTime
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)
