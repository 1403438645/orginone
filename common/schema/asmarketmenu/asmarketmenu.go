// Code generated by entc, DO NOT EDIT.

package asmarketmenu

import (
	"orginone/common/tools/date"
)

const (
	// Label holds the string label denoting the asmarketmenu type in the database.
	Label = "as_market_menu"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldParentID holds the string denoting the parent_id field in the database.
	FieldParentID = "parent_id"
	// FieldMenuName holds the string denoting the menu_name field in the database.
	FieldMenuName = "menu_name"
	// FieldMenuURL holds the string denoting the menu_url field in the database.
	FieldMenuURL = "menu_url"
	// FieldMenuColumn holds the string denoting the menu_column field in the database.
	FieldMenuColumn = "menu_column"
	// FieldIcon holds the string denoting the icon field in the database.
	FieldIcon = "icon"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldHTTPSMenuURL holds the string denoting the https_menu_url field in the database.
	FieldHTTPSMenuURL = "https_menu_url"
	// FieldReformStatus holds the string denoting the reform_status field in the database.
	FieldReformStatus = "reform_status"
	// FieldOutIPMenuURL holds the string denoting the out_ip_menu_url field in the database.
	FieldOutIPMenuURL = "out_ip_menu_url"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreateUser holds the string denoting the create_user field in the database.
	FieldCreateUser = "create_user"
	// FieldUpdateUser holds the string denoting the update_user field in the database.
	FieldUpdateUser = "update_user"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildrens holds the string denoting the childrens edge name in mutations.
	EdgeChildrens = "childrens"
	// EdgeAppx holds the string denoting the appx edge name in mutations.
	EdgeAppx = "appx"
	// EdgeRoleMenus holds the string denoting the rolemenus edge name in mutations.
	EdgeRoleMenus = "roleMenus"
	// EdgeRoles holds the string denoting the roles edge name in mutations.
	EdgeRoles = "roles"
	// EdgeUserSorts holds the string denoting the usersorts edge name in mutations.
	EdgeUserSorts = "UserSorts"
	// Table holds the table name of the asmarketmenu in the database.
	Table = "as_market_menu"
	// ParentTable is the table that holds the parent relation/edge.
	ParentTable = "as_market_menu"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "parent_id"
	// ChildrensTable is the table that holds the childrens relation/edge.
	ChildrensTable = "as_market_menu"
	// ChildrensColumn is the table column denoting the childrens relation/edge.
	ChildrensColumn = "parent_id"
	// AppxTable is the table that holds the appx relation/edge.
	AppxTable = "as_market_menu"
	// AppxInverseTable is the table name for the AsMarketApp entity.
	// It exists in this package in order to avoid circular dependency with the "asmarketapp" package.
	AppxInverseTable = "as_market_app"
	// AppxColumn is the table column denoting the appx relation/edge.
	AppxColumn = "app_id"
	// RoleMenusTable is the table that holds the roleMenus relation/edge.
	RoleMenusTable = "as_market_role_menu"
	// RoleMenusInverseTable is the table name for the AsMarketRoleMenu entity.
	// It exists in this package in order to avoid circular dependency with the "asmarketrolemenu" package.
	RoleMenusInverseTable = "as_market_role_menu"
	// RoleMenusColumn is the table column denoting the roleMenus relation/edge.
	RoleMenusColumn = "menu_id"
	// RolesTable is the table that holds the roles relation/edge. The primary key declared below.
	RolesTable = "as_market_role_menu"
	// RolesInverseTable is the table name for the AsMarketAppRole entity.
	// It exists in this package in order to avoid circular dependency with the "asmarketapprole" package.
	RolesInverseTable = "as_market_app_role"
	// UserSortsTable is the table that holds the UserSorts relation/edge.
	UserSortsTable = "as_market_menu_user_sort"
	// UserSortsInverseTable is the table name for the AsMarketMenuUserSort entity.
	// It exists in this package in order to avoid circular dependency with the "asmarketmenuusersort" package.
	UserSortsInverseTable = "as_market_menu_user_sort"
	// UserSortsColumn is the table column denoting the UserSorts relation/edge.
	UserSortsColumn = "menu_id"
)

// Columns holds all SQL columns for asmarketmenu fields.
var Columns = []string{
	FieldID,
	FieldAppID,
	FieldParentID,
	FieldMenuName,
	FieldMenuURL,
	FieldMenuColumn,
	FieldIcon,
	FieldSort,
	FieldHTTPSMenuURL,
	FieldReformStatus,
	FieldOutIPMenuURL,
	FieldIsDeleted,
	FieldStatus,
	FieldCreateUser,
	FieldUpdateUser,
	FieldCreateTime,
	FieldUpdateTime,
}

var (
	// RolesPrimaryKey and RolesColumn2 are the table columns denoting the
	// primary key for the roles relation (M2M).
	RolesPrimaryKey = []string{"role_id", "menu_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultSort holds the default value on creation for the "sort" field.
	DefaultSort int64
	// DefaultReformStatus holds the default value on creation for the "reform_status" field.
	DefaultReformStatus int64
	// DefaultIsDeleted holds the default value on creation for the "is_deleted" field.
	DefaultIsDeleted int64
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int64
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() date.DateTime
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() date.DateTime
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() date.DateTime
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)
