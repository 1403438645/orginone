// Code generated by entc, DO NOT EDIT.

package asjob

import (
	"orginone/common/tools/date"
)

const (
	// Label holds the string label denoting the asjob type in the database.
	Label = "as_job"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldJobName holds the string denoting the job_name field in the database.
	FieldJobName = "job_name"
	// FieldTenantCode holds the string denoting the tenant_code field in the database.
	FieldTenantCode = "tenant_code"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreateUser holds the string denoting the create_user field in the database.
	FieldCreateUser = "create_user"
	// FieldUpdateUser holds the string denoting the update_user field in the database.
	FieldUpdateUser = "update_user"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// EdgePersons holds the string denoting the persons edge name in mutations.
	EdgePersons = "persons"
	// EdgeRoles holds the string denoting the roles edge name in mutations.
	EdgeRoles = "roles"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// EdgeAgencys holds the string denoting the agencys edge name in mutations.
	EdgeAgencys = "agencys"
	// EdgeRoleDistribs holds the string denoting the roledistribs edge name in mutations.
	EdgeRoleDistribs = "roleDistribs"
	// Table holds the table name of the asjob in the database.
	Table = "as_job"
	// PersonsTable is the table that holds the persons relation/edge. The primary key declared below.
	PersonsTable = "as_job_person"
	// PersonsInverseTable is the table name for the AsPerson entity.
	// It exists in this package in order to avoid circular dependency with the "asperson" package.
	PersonsInverseTable = "as_person"
	// RolesTable is the table that holds the roles relation/edge. The primary key declared below.
	RolesTable = "as_role_job"
	// RolesInverseTable is the table name for the AsRole entity.
	// It exists in this package in order to avoid circular dependency with the "asrole" package.
	RolesInverseTable = "as_role"
	// UsersTable is the table that holds the users relation/edge. The primary key declared below.
	UsersTable = "as_user_job"
	// UsersInverseTable is the table name for the AsUser entity.
	// It exists in this package in order to avoid circular dependency with the "asuser" package.
	UsersInverseTable = "as_user"
	// AgencysTable is the table that holds the agencys relation/edge. The primary key declared below.
	AgencysTable = "as_agency_job"
	// AgencysInverseTable is the table name for the AsInnerAgency entity.
	// It exists in this package in order to avoid circular dependency with the "asinneragency" package.
	AgencysInverseTable = "as_inner_agency"
	// RoleDistribsTable is the table that holds the roleDistribs relation/edge.
	RoleDistribsTable = "as_market_role_distribution"
	// RoleDistribsInverseTable is the table name for the AsMarketRoleDistribution entity.
	// It exists in this package in order to avoid circular dependency with the "asmarketroledistribution" package.
	RoleDistribsInverseTable = "as_market_role_distribution"
	// RoleDistribsColumn is the table column denoting the roleDistribs relation/edge.
	RoleDistribsColumn = "job_id"
)

// Columns holds all SQL columns for asjob fields.
var Columns = []string{
	FieldID,
	FieldJobName,
	FieldTenantCode,
	FieldType,
	FieldSort,
	FieldIsDeleted,
	FieldStatus,
	FieldCreateUser,
	FieldUpdateUser,
	FieldCreateTime,
	FieldUpdateTime,
}

var (
	// PersonsPrimaryKey and PersonsColumn2 are the table columns denoting the
	// primary key for the persons relation (M2M).
	PersonsPrimaryKey = []string{"job_id", "person_id"}
	// RolesPrimaryKey and RolesColumn2 are the table columns denoting the
	// primary key for the roles relation (M2M).
	RolesPrimaryKey = []string{"role_id", "job_id"}
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"user_id", "job_id"}
	// AgencysPrimaryKey and AgencysColumn2 are the table columns denoting the
	// primary key for the agencys relation (M2M).
	AgencysPrimaryKey = []string{"agency_id", "job_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType int64
	// DefaultIsDeleted holds the default value on creation for the "is_deleted" field.
	DefaultIsDeleted int64
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int64
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() date.DateTime
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() date.DateTime
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() date.DateTime
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)
