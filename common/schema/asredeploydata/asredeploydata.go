// Code generated by entc, DO NOT EDIT.

package asredeploydata

import (
	"orginone/common/tools/date"
)

const (
	// Label holds the string label denoting the asredeploydata type in the database.
	Label = "as_redeploy_data"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldApplication holds the string denoting the application field in the database.
	FieldApplication = "application"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreateUser holds the string denoting the create_user field in the database.
	FieldCreateUser = "create_user"
	// FieldUpdateUser holds the string denoting the update_user field in the database.
	FieldUpdateUser = "update_user"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// EdgeAppx holds the string denoting the appx edge name in mutations.
	EdgeAppx = "appx"
	// Table holds the table name of the asredeploydata in the database.
	Table = "as_redeploy_data"
	// AppxTable is the table that holds the appx relation/edge.
	AppxTable = "as_redeploy_data"
	// AppxInverseTable is the table name for the AsMarketApp entity.
	// It exists in this package in order to avoid circular dependency with the "asmarketapp" package.
	AppxInverseTable = "as_market_app"
	// AppxColumn is the table column denoting the appx relation/edge.
	AppxColumn = "app_id"
)

// Columns holds all SQL columns for asredeploydata fields.
var Columns = []string{
	FieldID,
	FieldAppID,
	FieldApplication,
	FieldIsDeleted,
	FieldStatus,
	FieldCreateUser,
	FieldUpdateUser,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsDeleted holds the default value on creation for the "is_deleted" field.
	DefaultIsDeleted int64
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int64
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() date.DateTime
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() date.DateTime
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() date.DateTime
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)
