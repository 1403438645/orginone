// Code generated by entc, DO NOT EDIT.

package astenantattr

import (
	"orginone/common/tools/date"
)

const (
	// Label holds the string label denoting the astenantattr type in the database.
	Label = "as_tenant_attr"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldParentID holds the string denoting the parent_id field in the database.
	FieldParentID = "parent_id"
	// FieldAttrName holds the string denoting the attr_name field in the database.
	FieldAttrName = "attr_name"
	// FieldAttrRemark holds the string denoting the attr_remark field in the database.
	FieldAttrRemark = "attr_remark"
	// FieldIsDeleted holds the string denoting the is_deleted field in the database.
	FieldIsDeleted = "is_deleted"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldCreateUser holds the string denoting the create_user field in the database.
	FieldCreateUser = "create_user"
	// FieldUpdateUser holds the string denoting the update_user field in the database.
	FieldUpdateUser = "update_user"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// EdgeParentx holds the string denoting the parentx edge name in mutations.
	EdgeParentx = "parentx"
	// EdgeChildrens holds the string denoting the childrens edge name in mutations.
	EdgeChildrens = "childrens"
	// EdgeAttrRoles holds the string denoting the attrroles edge name in mutations.
	EdgeAttrRoles = "attrRoles"
	// Table holds the table name of the astenantattr in the database.
	Table = "as_tenant_attr"
	// ParentxTable is the table that holds the parentx relation/edge.
	ParentxTable = "as_tenant_attr"
	// ParentxColumn is the table column denoting the parentx relation/edge.
	ParentxColumn = "parent_id"
	// ChildrensTable is the table that holds the childrens relation/edge.
	ChildrensTable = "as_tenant_attr"
	// ChildrensColumn is the table column denoting the childrens relation/edge.
	ChildrensColumn = "parent_id"
	// AttrRolesTable is the table that holds the attrRoles relation/edge.
	AttrRolesTable = "as_tenant_attr_role"
	// AttrRolesInverseTable is the table name for the AsTenantAttrRole entity.
	// It exists in this package in order to avoid circular dependency with the "astenantattrrole" package.
	AttrRolesInverseTable = "as_tenant_attr_role"
	// AttrRolesColumn is the table column denoting the attrRoles relation/edge.
	AttrRolesColumn = "attr_id"
)

// Columns holds all SQL columns for astenantattr fields.
var Columns = []string{
	FieldID,
	FieldParentID,
	FieldAttrName,
	FieldAttrRemark,
	FieldIsDeleted,
	FieldStatus,
	FieldCreateUser,
	FieldUpdateUser,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultIsDeleted holds the default value on creation for the "is_deleted" field.
	DefaultIsDeleted int64
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int64
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() date.DateTime
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() date.DateTime
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() date.DateTime
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() int64
)
