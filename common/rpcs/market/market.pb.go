// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: source/rpc/asset-market/market.proto

package market

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_source_rpc_asset_market_market_proto protoreflect.FileDescriptor

var file_source_rpc_asset_market_market_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x2d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x1a, 0x27,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x6d, 0x73,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x9b, 0x18, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x12, 0x45, 0x0a, 0x12, 0x66, 0x69, 0x6e, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x11, 0x66, 0x69, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x18,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3b,
	0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x12,
	0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0f, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x12, 0x14,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x12, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3f,
	0x0a, 0x10, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12,
	0x54, 0x0a, 0x1f, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x70, 0x70, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x1c, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x75, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x70, 0x55,
	0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x13,
	0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x70, 0x70,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a,
	0x12, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x44, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x70, 0x70,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x4f, 0x0a,
	0x15, 0x66, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x4c,
	0x0a, 0x17, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x16,
	0x66, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x75, 0x6e, 0x69,
	0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x12, 0x19, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x12,
	0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x73, 0x12, 0x48, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x14, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4f, 0x6e, 0x4f, 0x72, 0x4f, 0x66, 0x66, 0x53,
	0x61, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x70, 0x70,
	0x4f, 0x6e, 0x4f, 0x72, 0x4f, 0x66, 0x66, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70,
	0x63, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63,
	0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x41, 0x70, 0x70, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52,
	0x65, 0x73, 0x12, 0x47, 0x0a, 0x14, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x10, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12,
	0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x14, 0x67,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x70, 0x70,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x46, 0x0a,
	0x0f, 0x61, 0x70, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x1d, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x6f, 0x6c,
	0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x65, 0x52, 0x70, 0x63, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52,
	0x6f, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73,
	0x12, 0x3f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x73, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x20,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x73, 0x12, 0x64, 0x0a, 0x21, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x61, 0x70,
	0x70, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x61, 0x70, 0x70, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x1d, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x69, 0x74, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x55, 0x6e, 0x69, 0x74, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x19, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x61,
	0x70, 0x69, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x42, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x79, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3b,
	0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x12, 0x16, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x13, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x16, 0x66, 0x69, 0x6e, 0x64,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x18, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x70, 0x63,
	0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x6f, 0x6c, 0x65,
	0x43, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x14, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_source_rpc_asset_market_market_proto_goTypes = []interface{}{
	(*TenantPurchaseReq)(nil),                 // 0: market.TenantPurchaseReq
	(*GroupPurchaseReq)(nil),                  // 1: market.GroupPurchaseReq
	(*MarketAppReq)(nil),                      // 2: market.MarketAppReq
	(*CommonRpcReq)(nil),                      // 3: market.CommonRpcReq
	(*GetRedeployReq)(nil),                    // 4: market.GetRedeployReq
	(*PrimaryKeyReq)(nil),                     // 5: market.PrimaryKeyReq
	(*GroupPurchaseAppReq)(nil),               // 6: market.GroupPurchaseAppReq
	(*GroupAppByIdReq)(nil),                   // 7: market.GroupAppByIdReq
	(*UnitAppUnsubscribeReq)(nil),             // 8: market.unitAppUnsubscribeReq
	(*GroupAppUnsubscribeReq)(nil),            // 9: market.groupAppUnsubscribeReq
	(*AppLinkReq)(nil),                        // 10: market.AppLinkReq
	(*FindMarkAppNoticeListReq)(nil),          // 11: market.FindMarkAppNoticeListReq
	(*MarkAppNoticeIdsReq)(nil),               // 12: market.MarkAppNoticeIdsReq
	(*UnitAppPurchasReq)(nil),                 // 13: market.UnitAppPurchasReq
	(*GroupAppPurchasReq)(nil),                // 14: market.GroupAppPurchasReq
	(*AppPurchasConfigReq)(nil),               // 15: market.AppPurchasConfigReq
	(*AppOnOrOffSaleReq)(nil),                 // 16: market.AppOnOrOffSaleReq
	(*DeleteAppReq)(nil),                      // 17: market.DeleteAppReq
	(*AppDeployReq)(nil),                      // 18: market.AppDeployReq
	(*AppCancelApplyReq)(nil),                 // 19: market.AppCancelApplyReq
	(*AppRoleDistribeRpcReq)(nil),             // 20: market.AppRoleDistribeRpcReq
	(*GetAppRoleDistribeReq)(nil),             // 21: market.GetAppRoleDistribeReq
	(*GetUserAppIdsReq)(nil),                  // 22: market.GetUserAppIdsReq
	(*GetComponmentReq)(nil),                  // 23: market.GetComponmentReq
	(*GetUserTemplateReq)(nil),                // 24: market.GetUserTemplateReq
	(*GetUserTemplateIdReq)(nil),              // 25: market.GetUserTemplateIdReq
	(*UpdateMarketAppNoticeReq)(nil),          // 26: market.UpdateMarketAppNoticeReq
	(*UpdateMarkAppNoticesStatusReq)(nil),     // 27: market.UpdateMarkAppNoticesStatusReq
	(*MarketappcomponenttemplateListReq)(nil), // 28: market.MarketappcomponenttemplateListReq
	(*MarketAppUnitCancelDistributeReq)(nil),  // 29: market.MarketAppUnitCancelDistributeReq
	(*GetUsedAppMenuReq)(nil),                 // 30: market.GetUsedAppMenuReq
	(*ApiRoleLitReq)(nil),                     // 31: market.ApiRoleLitReq
	(*RemoveByRelationReq)(nil),               // 32: market.RemoveByRelationReq
	(*SortUsedAppReq)(nil),                    // 33: market.SortUsedAppReq
	(*SubmitMarketUsedAppReq)(nil),            // 34: market.SubmitMarketUsedAppReq
	(*FindMarketAppCheckListReq)(nil),         // 35: market.FindMarketAppCheckListReq
	(*CheckRedeployReq)(nil),                  // 36: market.CheckRedeployReq
	(*AppCheckReq)(nil),                       // 37: market.AppCheckReq
	(*CheckRoleReq)(nil),                      // 38: market.CheckRoleReq
	(*CommonRpcRes)(nil),                      // 39: market.CommonRpcRes
}
var file_source_rpc_asset_market_market_proto_depIdxs = []int32{
	0,  // 0: market.market.fintTenantPurchase:input_type -> market.TenantPurchaseReq
	1,  // 1: market.market.fintGroupPurchase:input_type -> market.GroupPurchaseReq
	2,  // 2: market.market.findMarketApp:input_type -> market.MarketAppReq
	3,  // 3: market.market.submitMarketApp:input_type -> market.CommonRpcReq
	4,  // 4: market.market.getRedeployAppList:input_type -> market.GetRedeployReq
	5,  // 5: market.market.getMarketAppInfo:input_type -> market.PrimaryKeyReq
	6,  // 6: market.market.getGroupDistributeAppTenantList:input_type -> market.GroupPurchaseAppReq
	7,  // 7: market.market.getGroupDistributeConfigList:input_type -> market.GroupAppByIdReq
	8,  // 8: market.market.unitAppUnsubscribe:input_type -> market.unitAppUnsubscribeReq
	9,  // 9: market.market.groupAppUnsubscribe:input_type -> market.groupAppUnsubscribeReq
	10, // 10: market.market.getAppDisTenantList:input_type -> market.AppLinkReq
	10, // 11: market.market.getAppDisGroupList:input_type -> market.AppLinkReq
	11, // 12: market.market.findMarkAppNoticeList:input_type -> market.FindMarkAppNoticeListReq
	12, // 13: market.market.removeMarkAppNoticeList:input_type -> market.MarkAppNoticeIdsReq
	12, // 14: market.market.findMarkAppNoticeByIds:input_type -> market.MarkAppNoticeIdsReq
	13, // 15: market.market.unitAppPurchas:input_type -> market.UnitAppPurchasReq
	14, // 16: market.market.groupAppPurchas:input_type -> market.GroupAppPurchasReq
	15, // 17: market.market.getAppPurchasConfig:input_type -> market.AppPurchasConfigReq
	16, // 18: market.market.marketAppOnOrOffSale:input_type -> market.AppOnOrOffSaleReq
	17, // 19: market.market.marketAppDelete:input_type -> market.DeleteAppReq
	18, // 20: market.market.marketAppDeploy:input_type -> market.AppDeployReq
	19, // 21: market.market.marketAppCancelApply:input_type -> market.AppCancelApplyReq
	3,  // 22: market.market.marketAppPublish:input_type -> market.CommonRpcReq
	10, // 23: market.market.getAppComponmentList:input_type -> market.AppLinkReq
	20, // 24: market.market.appRoleDistribe:input_type -> market.AppRoleDistribeRpcReq
	21, // 25: market.market.getAppRoleDistribe:input_type -> market.GetAppRoleDistribeReq
	22, // 26: market.market.GetUserAppIds:input_type -> market.GetUserAppIdsReq
	23, // 27: market.market.GetAppComponments:input_type -> market.GetComponmentReq
	24, // 28: market.market.GetUserTemplates:input_type -> market.GetUserTemplateReq
	25, // 29: market.market.GetUserTemplateId:input_type -> market.GetUserTemplateIdReq
	26, // 30: market.market.updateMarketAppNotice:input_type -> market.UpdateMarketAppNoticeReq
	27, // 31: market.market.updateMarkAppNoticesStatus:input_type -> market.UpdateMarkAppNoticesStatusReq
	28, // 32: market.market.getMarketappcomponenttemplateList:input_type -> market.MarketappcomponenttemplateListReq
	29, // 33: market.market.marketAppUnitCancelDistribute:input_type -> market.MarketAppUnitCancelDistributeReq
	30, // 34: market.market.getUsedAppMenu:input_type -> market.GetUsedAppMenuReq
	31, // 35: market.market.apiRoleList:input_type -> market.ApiRoleLitReq
	32, // 36: market.market.removeByRelation:input_type -> market.RemoveByRelationReq
	33, // 37: market.market.sortUsedApp:input_type -> market.SortUsedAppReq
	34, // 38: market.market.submitMarketUsedApp:input_type -> market.SubmitMarketUsedAppReq
	35, // 39: market.market.findMarketAppCheckList:input_type -> market.FindMarketAppCheckListReq
	36, // 40: market.market.checkRedeploy:input_type -> market.CheckRedeployReq
	37, // 41: market.market.appCheck:input_type -> market.AppCheckReq
	38, // 42: market.market.checkRoleCanDelete:input_type -> market.CheckRoleReq
	39, // 43: market.market.fintTenantPurchase:output_type -> market.CommonRpcRes
	39, // 44: market.market.fintGroupPurchase:output_type -> market.CommonRpcRes
	39, // 45: market.market.findMarketApp:output_type -> market.CommonRpcRes
	39, // 46: market.market.submitMarketApp:output_type -> market.CommonRpcRes
	39, // 47: market.market.getRedeployAppList:output_type -> market.CommonRpcRes
	39, // 48: market.market.getMarketAppInfo:output_type -> market.CommonRpcRes
	39, // 49: market.market.getGroupDistributeAppTenantList:output_type -> market.CommonRpcRes
	39, // 50: market.market.getGroupDistributeConfigList:output_type -> market.CommonRpcRes
	39, // 51: market.market.unitAppUnsubscribe:output_type -> market.CommonRpcRes
	39, // 52: market.market.groupAppUnsubscribe:output_type -> market.CommonRpcRes
	39, // 53: market.market.getAppDisTenantList:output_type -> market.CommonRpcRes
	39, // 54: market.market.getAppDisGroupList:output_type -> market.CommonRpcRes
	39, // 55: market.market.findMarkAppNoticeList:output_type -> market.CommonRpcRes
	39, // 56: market.market.removeMarkAppNoticeList:output_type -> market.CommonRpcRes
	39, // 57: market.market.findMarkAppNoticeByIds:output_type -> market.CommonRpcRes
	39, // 58: market.market.unitAppPurchas:output_type -> market.CommonRpcRes
	39, // 59: market.market.groupAppPurchas:output_type -> market.CommonRpcRes
	39, // 60: market.market.getAppPurchasConfig:output_type -> market.CommonRpcRes
	39, // 61: market.market.marketAppOnOrOffSale:output_type -> market.CommonRpcRes
	39, // 62: market.market.marketAppDelete:output_type -> market.CommonRpcRes
	39, // 63: market.market.marketAppDeploy:output_type -> market.CommonRpcRes
	39, // 64: market.market.marketAppCancelApply:output_type -> market.CommonRpcRes
	39, // 65: market.market.marketAppPublish:output_type -> market.CommonRpcRes
	39, // 66: market.market.getAppComponmentList:output_type -> market.CommonRpcRes
	39, // 67: market.market.appRoleDistribe:output_type -> market.CommonRpcRes
	39, // 68: market.market.getAppRoleDistribe:output_type -> market.CommonRpcRes
	39, // 69: market.market.GetUserAppIds:output_type -> market.CommonRpcRes
	39, // 70: market.market.GetAppComponments:output_type -> market.CommonRpcRes
	39, // 71: market.market.GetUserTemplates:output_type -> market.CommonRpcRes
	39, // 72: market.market.GetUserTemplateId:output_type -> market.CommonRpcRes
	39, // 73: market.market.updateMarketAppNotice:output_type -> market.CommonRpcRes
	39, // 74: market.market.updateMarkAppNoticesStatus:output_type -> market.CommonRpcRes
	39, // 75: market.market.getMarketappcomponenttemplateList:output_type -> market.CommonRpcRes
	39, // 76: market.market.marketAppUnitCancelDistribute:output_type -> market.CommonRpcRes
	39, // 77: market.market.getUsedAppMenu:output_type -> market.CommonRpcRes
	39, // 78: market.market.apiRoleList:output_type -> market.CommonRpcRes
	39, // 79: market.market.removeByRelation:output_type -> market.CommonRpcRes
	39, // 80: market.market.sortUsedApp:output_type -> market.CommonRpcRes
	39, // 81: market.market.submitMarketUsedApp:output_type -> market.CommonRpcRes
	39, // 82: market.market.findMarketAppCheckList:output_type -> market.CommonRpcRes
	39, // 83: market.market.checkRedeploy:output_type -> market.CommonRpcRes
	39, // 84: market.market.appCheck:output_type -> market.CommonRpcRes
	39, // 85: market.market.checkRoleCanDelete:output_type -> market.CommonRpcRes
	43, // [43:86] is the sub-list for method output_type
	0,  // [0:43] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_source_rpc_asset_market_market_proto_init() }
func file_source_rpc_asset_market_market_proto_init() {
	if File_source_rpc_asset_market_market_proto != nil {
		return
	}
	file_source_rpc_asset_market_marketmsg_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_source_rpc_asset_market_market_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_source_rpc_asset_market_market_proto_goTypes,
		DependencyIndexes: file_source_rpc_asset_market_market_proto_depIdxs,
	}.Build()
	File_source_rpc_asset_market_market_proto = out.File
	file_source_rpc_asset_market_market_proto_rawDesc = nil
	file_source_rpc_asset_market_market_proto_goTypes = nil
	file_source_rpc_asset_market_market_proto_depIdxs = nil
}
