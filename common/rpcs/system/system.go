// Code generated by goctl. DO NOT EDIT!
// Source: system.proto

package system

import (
	"context"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	System interface {
		// 系统字典(blade-system)
		FindDicItemsByValue(ctx context.Context, in *FindDicItemReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 字典分页查询
		FindAllDic(ctx context.Context, in *FindAllDicReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 设置主租户
		SetMasterUnit(ctx context.Context, in *SetMasterUnitReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 修改用户名
		UpdateUserName(ctx context.Context, in *UpdateUserName, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取用户信息
		FindPersonByUserId(ctx context.Context, in *PersonByUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取用户或角色信息
		FindUserOrRoleInfo(ctx context.Context, in *RoleUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取用户信息
		FindUserByUserId(ctx context.Context, in *PrimaryKeyReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取机构或人员信息
		FindAgencyOrPerson(ctx context.Context, in *AgencyPersonReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 根据账户查找租户
		FindTenantByAccount(ctx context.Context, in *ByAccountReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 根据账户查找租户分页
		FindTenantInfoByAccount(ctx context.Context, in *AccountTenantReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 根据名称查询账户
		SearchTeantByName(ctx context.Context, in *SearchTeantReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 加入租户
		JoinTeantByCode(ctx context.Context, in *TenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 创建租户
		CreateTenant(ctx context.Context, in *CreateTenantReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取租户详情
		FindTenantById(ctx context.Context, in *TenantByIdReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 根据组织编号和类型
		FindAllGroupByCodeAndType(ctx context.Context, in *SearchAllGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 查询用户系统菜单树
		FindRoleMenusByUser(ctx context.Context, in *RoleMenusByUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 查询用户应用菜单树
		FindMarketAppRoleMenusByUser(ctx context.Context, in *RoleMenusByUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 更新单位信息
		UpdateUnitInfo(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 查询租户内设机构列表(树)
		FindInnerAgencyTreeByTenantCode(ctx context.Context, in *TenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 查询全新的部门编码
		FindAgencyDeptCodeByTenantCode(ctx context.Context, in *TenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 查询全新人员编号
		GetNewPersonUserCode(ctx context.Context, in *TenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取租户下人员信息
		FindTenantPersons(ctx context.Context, in *SearchPersonByTenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取租户下集团信息
		FindAllGroupByTentantCode(ctx context.Context, in *FindAllGroupByTenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取行政区域树
		FindAdministrativeTree(ctx context.Context, in *Nil, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页获取行政区域
		FindAdministrativeList(ctx context.Context, in *PageRequest, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取岗位列表
		FindJobList(ctx context.Context, in *FindJobListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取所有单位列表（包含子集团）根据集团id
		FindUnitPageByGroupId(ctx context.Context, in *FindUnitPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取所有单位列表（不含子集团）根据集团id
		FindBlowUnitPageByGroupId(ctx context.Context, in *FindUnitPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取集团信息
		FingGroupInfoById(ctx context.Context, in *PrimaryKeyReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页查询租户
		FindScenesListPage(ctx context.Context, in *FindScenesListPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除租户
		RemoveScenesByIds(ctx context.Context, in *RemoveScenesByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页查询单位
		FindOrgansV2ListPage(ctx context.Context, in *FindOrgansV2ListPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除单位
		RemoveOrgansByIds(ctx context.Context, in *V2RemoveByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页查询人员
		FindPersonListPage(ctx context.Context, in *FindPersonListPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除人员
		RemovePersonByIds(ctx context.Context, in *RemovePersonByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除集团
		RemoveAllGroupByIds(ctx context.Context, in *RemoveAllGroupByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页查询集团
		FindAllGroupListAll(ctx context.Context, in *FindAllGroupListAllReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页查询角色
		FindRoleListPage(ctx context.Context, in *FindRoleListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 查询集团层级根据集团id
		FindGroupLayerById(ctx context.Context, in *GroupLayerByIdReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页查询租户特性
		FindTenantAttrList(ctx context.Context, in *FindTenantAttrListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取导入状态详情
		FindImportStatusList(ctx context.Context, in *FindImportStatusListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 新增组织人员
		AddPerson(ctx context.Context, in *AddPersonReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 批量新增组织人员
		AddPersons(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 查询租户图标
		FindTenantIconList(ctx context.Context, in *FindTenantIconListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页查询部门
		FindInnerAgencyList(ctx context.Context, in *FindInnerAgencyListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取所有角色列表
		FindAllRolesList(ctx context.Context, in *FindAllRolesListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 修改部门层级关系及用户所在部门
		UpdateAgencyInnerUser(ctx context.Context, in *UpdateAgencyInnerUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 创建集团
		CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 查询集团
		QueryGroup(ctx context.Context, in *QueryGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 解散集团
		DisbandGroupById(ctx context.Context, in *DisbandGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取组织树
		GetGroupTree(ctx context.Context, in *GroupTreeReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取集团信息
		GetAllgroupInfoById(ctx context.Context, in *PrimaryKeyReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 集团应用分发
		GroupAppDistribute(ctx context.Context, in *GroupAppDistributeReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 申请加入集团租户列表
		ListApplyTenant(ctx context.Context, in *ListApplyTenantReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分配部门人员
		DistributeDeptPersons(ctx context.Context, in *DistributeDeptPersonsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 根据名字查询人员
		SearchPersonByName(ctx context.Context, in *SerarchDeptPersonReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分配名字查询部门
		SearchDeptByName(ctx context.Context, in *SerarchDeptPersonReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 更新人员电话 补充电话
		UpdatePersonPhoneNumber(ctx context.Context, in *UpdatePersonPhoneNumberReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 租户加入申请及审批集团
		TenantsJoinGroup(ctx context.Context, in *TenantsJoinGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 模糊搜索岗位列表
		SearchJobList(ctx context.Context, in *SearchJobListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 修改岗位并分配人员
		UpdateJobUser(ctx context.Context, in *UpdateJobUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 新增岗位并分配人员
		AddJobUser(ctx context.Context, in *AddJobUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除岗位
		RemoveJob(ctx context.Context, in *RemoveJobReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 批量修改岗位并分配人员
		UpdateJobUsers(ctx context.Context, in *UpdateJobUsersReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 隐藏、显示树形单位
		UpdateGroupIsHide(ctx context.Context, in *UpdateGroupIsHideReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 移除实集团叶子节点租户
		RemoveLeafTenants(ctx context.Context, in *RemoveLeafTenantsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 取性质里的租户列表分页
		FindPropertiesUnitList(ctx context.Context, in *FindPropertiesUnitListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 取性质里的租户列表分页
		CreateDistributeProperties(ctx context.Context, in *CreateDistributePropertiesReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 集团创建性质并进行分配
		CreateAndDistributeProperties(ctx context.Context, in *CreateAndDistributePropertiesReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分配性质给租户
		DistributeProperties(ctx context.Context, in *DistributePropertiesReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取所有下属集团
		FindGroupListByRelations(ctx context.Context, in *FindGroupListByRelationsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 批量调整租户上级
		UpdateFatherTenant(ctx context.Context, in *UpdateFatherTenantReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 人员停用
		BanPersonUser(ctx context.Context, in *BanPersonUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 更新用户角色
		UpdateUserRole(ctx context.Context, in *UpdateUserRoleReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除用户角色
		DeleteUserRole(ctx context.Context, in *UpdateUserRoleReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 新增内部机构并分配人员
		AddInnerUser(ctx context.Context, in *AddInnerUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 新增内部机构并分配人员
		ActiveUser(ctx context.Context, in *ActiveUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 移除内部机构人员
		RemoveDeptJobUser(ctx context.Context, in *RemoveDeptUserJobReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页查询性质
		FindPropertiesList(ctx context.Context, in *FindPropertiesListReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页角色
		FindRoleListByUserId(ctx context.Context, in *FindRoleListByUserIdReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 分页角色Id
		FindRoleIdListByUserId(ctx context.Context, in *FindRoleListByUserIdReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 更新人员信息
		UpdatePersonInfo(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 更新单位信息
		UpdateOrgansInfo(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 更新租户信息
		UpdateScenesInfo(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 更新集团信息
		UpdateGroupInfo(ctx context.Context, in *UpdateGroupInfoReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 插入文件导入记录
		CreateInputRecord(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 批量导入租户与集团关系
		UpdateTenantRelations(ctx context.Context, in *UpdateTenantRelationsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取所有单位列表（包含子集团）根据集团id
		FindUnitByIds(ctx context.Context, in *FindUnitByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取菜单树形结构
		TreeMenu(ctx context.Context, in *Nil, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 新增或修改菜单
		SubmitMenu(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除菜单
		RemoveMenu(ctx context.Context, in *RemoveMenuReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 角色权限
		RoleTreeKeysMenu(ctx context.Context, in *RoleTreeKeysMenuReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 获取租户组角色
		ListRoleByAttr(ctx context.Context, in *ListRoleByAttrReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 新增或修改角色
		UpdateRole(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 设置角色权限
		AuthorizationRole(ctx context.Context, in *AuthorizationRoleReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除角色
		RemoveRoleByIds(ctx context.Context, in *RemoveRoleByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 租户组角色分配
		TenantAttrRoleAlloc(ctx context.Context, in *TenantAttrRoleAllocReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 新增或编辑分类信息
		TenantAttrSubmit(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除分类信息
		TenantAttrRemove(ctx context.Context, in *TenantAttrRemoveReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除部门
		AgencyRemove(ctx context.Context, in *AgencyRemoveReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 主单位导入
		UpdateMsterUnit(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 岗位导入
		AddJobs(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 部门导入
		AddAgencys(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 部门导入
		AddGroupRelations(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 删除性质
		RemoveProperties(ctx context.Context, in *RemovePropertiesReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 保存字典
		SubmitDict(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 通过名字查找租户列表
		FindTenantByNames(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 租户导入
		AddTenants(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 租户图片批量导入
		ImportTenantIcon(ctx context.Context, in *ImportTenantIconReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
		// 租户图片批量导入
		RemoveTenantIcon(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error)
	}

	defaultSystem struct {
		cli zrpc.Client
	}
)

func NewSystem(cli zrpc.Client) System {
	return &defaultSystem{
		cli: cli,
	}
}

// 系统字典(blade-system)
func (m *defaultSystem) FindDicItemsByValue(ctx context.Context, in *FindDicItemReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindDicItemsByValue(ctx, in, opts...)
}

// 字典分页查询
func (m *defaultSystem) FindAllDic(ctx context.Context, in *FindAllDicReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAllDic(ctx, in, opts...)
}

// 设置主租户
func (m *defaultSystem) SetMasterUnit(ctx context.Context, in *SetMasterUnitReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.SetMasterUnit(ctx, in, opts...)
}

// 修改用户名
func (m *defaultSystem) UpdateUserName(ctx context.Context, in *UpdateUserName, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateUserName(ctx, in, opts...)
}

// 获取用户信息
func (m *defaultSystem) FindPersonByUserId(ctx context.Context, in *PersonByUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindPersonByUserId(ctx, in, opts...)
}

// 获取用户或角色信息
func (m *defaultSystem) FindUserOrRoleInfo(ctx context.Context, in *RoleUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindUserOrRoleInfo(ctx, in, opts...)
}

// 获取用户信息
func (m *defaultSystem) FindUserByUserId(ctx context.Context, in *PrimaryKeyReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindUserByUserId(ctx, in, opts...)
}

// 获取机构或人员信息
func (m *defaultSystem) FindAgencyOrPerson(ctx context.Context, in *AgencyPersonReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAgencyOrPerson(ctx, in, opts...)
}

// 根据账户查找租户
func (m *defaultSystem) FindTenantByAccount(ctx context.Context, in *ByAccountReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindTenantByAccount(ctx, in, opts...)
}

// 根据账户查找租户分页
func (m *defaultSystem) FindTenantInfoByAccount(ctx context.Context, in *AccountTenantReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindTenantInfoByAccount(ctx, in, opts...)
}

// 根据名称查询账户
func (m *defaultSystem) SearchTeantByName(ctx context.Context, in *SearchTeantReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.SearchTeantByName(ctx, in, opts...)
}

// 加入租户
func (m *defaultSystem) JoinTeantByCode(ctx context.Context, in *TenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.JoinTeantByCode(ctx, in, opts...)
}

// 创建租户
func (m *defaultSystem) CreateTenant(ctx context.Context, in *CreateTenantReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.CreateTenant(ctx, in, opts...)
}

// 获取租户详情
func (m *defaultSystem) FindTenantById(ctx context.Context, in *TenantByIdReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindTenantById(ctx, in, opts...)
}

// 根据组织编号和类型
func (m *defaultSystem) FindAllGroupByCodeAndType(ctx context.Context, in *SearchAllGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAllGroupByCodeAndType(ctx, in, opts...)
}

// 查询用户系统菜单树
func (m *defaultSystem) FindRoleMenusByUser(ctx context.Context, in *RoleMenusByUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindRoleMenusByUser(ctx, in, opts...)
}

// 查询用户应用菜单树
func (m *defaultSystem) FindMarketAppRoleMenusByUser(ctx context.Context, in *RoleMenusByUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindMarketAppRoleMenusByUser(ctx, in, opts...)
}

// 更新单位信息
func (m *defaultSystem) UpdateUnitInfo(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateUnitInfo(ctx, in, opts...)
}

// 查询租户内设机构列表(树)
func (m *defaultSystem) FindInnerAgencyTreeByTenantCode(ctx context.Context, in *TenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindInnerAgencyTreeByTenantCode(ctx, in, opts...)
}

// 查询全新的部门编码
func (m *defaultSystem) FindAgencyDeptCodeByTenantCode(ctx context.Context, in *TenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAgencyDeptCodeByTenantCode(ctx, in, opts...)
}

// 查询全新人员编号
func (m *defaultSystem) GetNewPersonUserCode(ctx context.Context, in *TenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.GetNewPersonUserCode(ctx, in, opts...)
}

// 获取租户下人员信息
func (m *defaultSystem) FindTenantPersons(ctx context.Context, in *SearchPersonByTenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindTenantPersons(ctx, in, opts...)
}

// 获取租户下集团信息
func (m *defaultSystem) FindAllGroupByTentantCode(ctx context.Context, in *FindAllGroupByTenantCodeReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAllGroupByTentantCode(ctx, in, opts...)
}

// 获取行政区域树
func (m *defaultSystem) FindAdministrativeTree(ctx context.Context, in *Nil, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAdministrativeTree(ctx, in, opts...)
}

// 分页获取行政区域
func (m *defaultSystem) FindAdministrativeList(ctx context.Context, in *PageRequest, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAdministrativeList(ctx, in, opts...)
}

// 获取岗位列表
func (m *defaultSystem) FindJobList(ctx context.Context, in *FindJobListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindJobList(ctx, in, opts...)
}

// 获取所有单位列表（包含子集团）根据集团id
func (m *defaultSystem) FindUnitPageByGroupId(ctx context.Context, in *FindUnitPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindUnitPageByGroupId(ctx, in, opts...)
}

// 获取所有单位列表（不含子集团）根据集团id
func (m *defaultSystem) FindBlowUnitPageByGroupId(ctx context.Context, in *FindUnitPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindBlowUnitPageByGroupId(ctx, in, opts...)
}

// 获取集团信息
func (m *defaultSystem) FingGroupInfoById(ctx context.Context, in *PrimaryKeyReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FingGroupInfoById(ctx, in, opts...)
}

// 分页查询租户
func (m *defaultSystem) FindScenesListPage(ctx context.Context, in *FindScenesListPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindScenesListPage(ctx, in, opts...)
}

// 删除租户
func (m *defaultSystem) RemoveScenesByIds(ctx context.Context, in *RemoveScenesByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveScenesByIds(ctx, in, opts...)
}

// 分页查询单位
func (m *defaultSystem) FindOrgansV2ListPage(ctx context.Context, in *FindOrgansV2ListPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindOrgansV2ListPage(ctx, in, opts...)
}

// 删除单位
func (m *defaultSystem) RemoveOrgansByIds(ctx context.Context, in *V2RemoveByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveOrgansByIds(ctx, in, opts...)
}

// 分页查询人员
func (m *defaultSystem) FindPersonListPage(ctx context.Context, in *FindPersonListPageReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindPersonListPage(ctx, in, opts...)
}

// 删除人员
func (m *defaultSystem) RemovePersonByIds(ctx context.Context, in *RemovePersonByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemovePersonByIds(ctx, in, opts...)
}

// 删除集团
func (m *defaultSystem) RemoveAllGroupByIds(ctx context.Context, in *RemoveAllGroupByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveAllGroupByIds(ctx, in, opts...)
}

// 分页查询集团
func (m *defaultSystem) FindAllGroupListAll(ctx context.Context, in *FindAllGroupListAllReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAllGroupListAll(ctx, in, opts...)
}

// 分页查询角色
func (m *defaultSystem) FindRoleListPage(ctx context.Context, in *FindRoleListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindRoleListPage(ctx, in, opts...)
}

// 查询集团层级根据集团id
func (m *defaultSystem) FindGroupLayerById(ctx context.Context, in *GroupLayerByIdReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindGroupLayerById(ctx, in, opts...)
}

// 分页查询租户特性
func (m *defaultSystem) FindTenantAttrList(ctx context.Context, in *FindTenantAttrListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindTenantAttrList(ctx, in, opts...)
}

// 获取导入状态详情
func (m *defaultSystem) FindImportStatusList(ctx context.Context, in *FindImportStatusListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindImportStatusList(ctx, in, opts...)
}

// 新增组织人员
func (m *defaultSystem) AddPerson(ctx context.Context, in *AddPersonReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AddPerson(ctx, in, opts...)
}

// 批量新增组织人员
func (m *defaultSystem) AddPersons(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AddPersons(ctx, in, opts...)
}

// 查询租户图标
func (m *defaultSystem) FindTenantIconList(ctx context.Context, in *FindTenantIconListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindTenantIconList(ctx, in, opts...)
}

// 分页查询部门
func (m *defaultSystem) FindInnerAgencyList(ctx context.Context, in *FindInnerAgencyListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindInnerAgencyList(ctx, in, opts...)
}

// 获取所有角色列表
func (m *defaultSystem) FindAllRolesList(ctx context.Context, in *FindAllRolesListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindAllRolesList(ctx, in, opts...)
}

// 修改部门层级关系及用户所在部门
func (m *defaultSystem) UpdateAgencyInnerUser(ctx context.Context, in *UpdateAgencyInnerUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateAgencyInnerUser(ctx, in, opts...)
}

// 创建集团
func (m *defaultSystem) CreateGroup(ctx context.Context, in *CreateGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.CreateGroup(ctx, in, opts...)
}

// 查询集团
func (m *defaultSystem) QueryGroup(ctx context.Context, in *QueryGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.QueryGroup(ctx, in, opts...)
}

// 解散集团
func (m *defaultSystem) DisbandGroupById(ctx context.Context, in *DisbandGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.DisbandGroupById(ctx, in, opts...)
}

// 获取组织树
func (m *defaultSystem) GetGroupTree(ctx context.Context, in *GroupTreeReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.GetGroupTree(ctx, in, opts...)
}

// 获取集团信息
func (m *defaultSystem) GetAllgroupInfoById(ctx context.Context, in *PrimaryKeyReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.GetAllgroupInfoById(ctx, in, opts...)
}

// 集团应用分发
func (m *defaultSystem) GroupAppDistribute(ctx context.Context, in *GroupAppDistributeReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.GroupAppDistribute(ctx, in, opts...)
}

// 申请加入集团租户列表
func (m *defaultSystem) ListApplyTenant(ctx context.Context, in *ListApplyTenantReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.ListApplyTenant(ctx, in, opts...)
}

// 分配部门人员
func (m *defaultSystem) DistributeDeptPersons(ctx context.Context, in *DistributeDeptPersonsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.DistributeDeptPersons(ctx, in, opts...)
}

// 根据名字查询人员
func (m *defaultSystem) SearchPersonByName(ctx context.Context, in *SerarchDeptPersonReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.SearchPersonByName(ctx, in, opts...)
}

// 分配名字查询部门
func (m *defaultSystem) SearchDeptByName(ctx context.Context, in *SerarchDeptPersonReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.SearchDeptByName(ctx, in, opts...)
}

// 更新人员电话 补充电话
func (m *defaultSystem) UpdatePersonPhoneNumber(ctx context.Context, in *UpdatePersonPhoneNumberReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdatePersonPhoneNumber(ctx, in, opts...)
}

// 租户加入申请及审批集团
func (m *defaultSystem) TenantsJoinGroup(ctx context.Context, in *TenantsJoinGroupReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.TenantsJoinGroup(ctx, in, opts...)
}

// 模糊搜索岗位列表
func (m *defaultSystem) SearchJobList(ctx context.Context, in *SearchJobListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.SearchJobList(ctx, in, opts...)
}

// 修改岗位并分配人员
func (m *defaultSystem) UpdateJobUser(ctx context.Context, in *UpdateJobUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateJobUser(ctx, in, opts...)
}

// 新增岗位并分配人员
func (m *defaultSystem) AddJobUser(ctx context.Context, in *AddJobUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AddJobUser(ctx, in, opts...)
}

// 删除岗位
func (m *defaultSystem) RemoveJob(ctx context.Context, in *RemoveJobReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveJob(ctx, in, opts...)
}

// 批量修改岗位并分配人员
func (m *defaultSystem) UpdateJobUsers(ctx context.Context, in *UpdateJobUsersReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateJobUsers(ctx, in, opts...)
}

// 隐藏、显示树形单位
func (m *defaultSystem) UpdateGroupIsHide(ctx context.Context, in *UpdateGroupIsHideReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateGroupIsHide(ctx, in, opts...)
}

// 移除实集团叶子节点租户
func (m *defaultSystem) RemoveLeafTenants(ctx context.Context, in *RemoveLeafTenantsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveLeafTenants(ctx, in, opts...)
}

// 取性质里的租户列表分页
func (m *defaultSystem) FindPropertiesUnitList(ctx context.Context, in *FindPropertiesUnitListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindPropertiesUnitList(ctx, in, opts...)
}

// 取性质里的租户列表分页
func (m *defaultSystem) CreateDistributeProperties(ctx context.Context, in *CreateDistributePropertiesReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.CreateDistributeProperties(ctx, in, opts...)
}

// 集团创建性质并进行分配
func (m *defaultSystem) CreateAndDistributeProperties(ctx context.Context, in *CreateAndDistributePropertiesReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.CreateAndDistributeProperties(ctx, in, opts...)
}

// 分配性质给租户
func (m *defaultSystem) DistributeProperties(ctx context.Context, in *DistributePropertiesReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.DistributeProperties(ctx, in, opts...)
}

// 获取所有下属集团
func (m *defaultSystem) FindGroupListByRelations(ctx context.Context, in *FindGroupListByRelationsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindGroupListByRelations(ctx, in, opts...)
}

// 批量调整租户上级
func (m *defaultSystem) UpdateFatherTenant(ctx context.Context, in *UpdateFatherTenantReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateFatherTenant(ctx, in, opts...)
}

// 人员停用
func (m *defaultSystem) BanPersonUser(ctx context.Context, in *BanPersonUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.BanPersonUser(ctx, in, opts...)
}

// 更新用户角色
func (m *defaultSystem) UpdateUserRole(ctx context.Context, in *UpdateUserRoleReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateUserRole(ctx, in, opts...)
}

// 删除用户角色
func (m *defaultSystem) DeleteUserRole(ctx context.Context, in *UpdateUserRoleReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.DeleteUserRole(ctx, in, opts...)
}

// 新增内部机构并分配人员
func (m *defaultSystem) AddInnerUser(ctx context.Context, in *AddInnerUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AddInnerUser(ctx, in, opts...)
}

// 新增内部机构并分配人员
func (m *defaultSystem) ActiveUser(ctx context.Context, in *ActiveUserReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.ActiveUser(ctx, in, opts...)
}

// 移除内部机构人员
func (m *defaultSystem) RemoveDeptJobUser(ctx context.Context, in *RemoveDeptUserJobReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveDeptJobUser(ctx, in, opts...)
}

// 分页查询性质
func (m *defaultSystem) FindPropertiesList(ctx context.Context, in *FindPropertiesListReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindPropertiesList(ctx, in, opts...)
}

// 分页角色
func (m *defaultSystem) FindRoleListByUserId(ctx context.Context, in *FindRoleListByUserIdReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindRoleListByUserId(ctx, in, opts...)
}

// 分页角色Id
func (m *defaultSystem) FindRoleIdListByUserId(ctx context.Context, in *FindRoleListByUserIdReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindRoleIdListByUserId(ctx, in, opts...)
}

// 更新人员信息
func (m *defaultSystem) UpdatePersonInfo(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdatePersonInfo(ctx, in, opts...)
}

// 更新单位信息
func (m *defaultSystem) UpdateOrgansInfo(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateOrgansInfo(ctx, in, opts...)
}

// 更新租户信息
func (m *defaultSystem) UpdateScenesInfo(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateScenesInfo(ctx, in, opts...)
}

// 更新集团信息
func (m *defaultSystem) UpdateGroupInfo(ctx context.Context, in *UpdateGroupInfoReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateGroupInfo(ctx, in, opts...)
}

// 插入文件导入记录
func (m *defaultSystem) CreateInputRecord(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.CreateInputRecord(ctx, in, opts...)
}

// 批量导入租户与集团关系
func (m *defaultSystem) UpdateTenantRelations(ctx context.Context, in *UpdateTenantRelationsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateTenantRelations(ctx, in, opts...)
}

// 获取所有单位列表（包含子集团）根据集团id
func (m *defaultSystem) FindUnitByIds(ctx context.Context, in *FindUnitByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindUnitByIds(ctx, in, opts...)
}

// 获取菜单树形结构
func (m *defaultSystem) TreeMenu(ctx context.Context, in *Nil, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.TreeMenu(ctx, in, opts...)
}

// 新增或修改菜单
func (m *defaultSystem) SubmitMenu(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.SubmitMenu(ctx, in, opts...)
}

// 删除菜单
func (m *defaultSystem) RemoveMenu(ctx context.Context, in *RemoveMenuReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveMenu(ctx, in, opts...)
}

// 角色权限
func (m *defaultSystem) RoleTreeKeysMenu(ctx context.Context, in *RoleTreeKeysMenuReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RoleTreeKeysMenu(ctx, in, opts...)
}

// 获取租户组角色
func (m *defaultSystem) ListRoleByAttr(ctx context.Context, in *ListRoleByAttrReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.ListRoleByAttr(ctx, in, opts...)
}

// 新增或修改角色
func (m *defaultSystem) UpdateRole(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateRole(ctx, in, opts...)
}

// 设置角色权限
func (m *defaultSystem) AuthorizationRole(ctx context.Context, in *AuthorizationRoleReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AuthorizationRole(ctx, in, opts...)
}

// 删除角色
func (m *defaultSystem) RemoveRoleByIds(ctx context.Context, in *RemoveRoleByIdsReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveRoleByIds(ctx, in, opts...)
}

// 租户组角色分配
func (m *defaultSystem) TenantAttrRoleAlloc(ctx context.Context, in *TenantAttrRoleAllocReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.TenantAttrRoleAlloc(ctx, in, opts...)
}

// 新增或编辑分类信息
func (m *defaultSystem) TenantAttrSubmit(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.TenantAttrSubmit(ctx, in, opts...)
}

// 删除分类信息
func (m *defaultSystem) TenantAttrRemove(ctx context.Context, in *TenantAttrRemoveReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.TenantAttrRemove(ctx, in, opts...)
}

// 删除部门
func (m *defaultSystem) AgencyRemove(ctx context.Context, in *AgencyRemoveReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AgencyRemove(ctx, in, opts...)
}

// 主单位导入
func (m *defaultSystem) UpdateMsterUnit(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.UpdateMsterUnit(ctx, in, opts...)
}

// 岗位导入
func (m *defaultSystem) AddJobs(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AddJobs(ctx, in, opts...)
}

// 部门导入
func (m *defaultSystem) AddAgencys(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AddAgencys(ctx, in, opts...)
}

// 部门导入
func (m *defaultSystem) AddGroupRelations(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AddGroupRelations(ctx, in, opts...)
}

// 删除性质
func (m *defaultSystem) RemoveProperties(ctx context.Context, in *RemovePropertiesReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveProperties(ctx, in, opts...)
}

// 保存字典
func (m *defaultSystem) SubmitDict(ctx context.Context, in *CommonRpcRes, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.SubmitDict(ctx, in, opts...)
}

// 通过名字查找租户列表
func (m *defaultSystem) FindTenantByNames(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.FindTenantByNames(ctx, in, opts...)
}

// 租户导入
func (m *defaultSystem) AddTenants(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.AddTenants(ctx, in, opts...)
}

// 租户图片批量导入
func (m *defaultSystem) ImportTenantIcon(ctx context.Context, in *ImportTenantIconReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.ImportTenantIcon(ctx, in, opts...)
}

// 租户图片批量导入
func (m *defaultSystem) RemoveTenantIcon(ctx context.Context, in *CommonRpcReq, opts ...grpc.CallOption) (*CommonRpcRes, error) {
	client := NewSystemClient(m.cli.Conn())
	return client.RemoveTenantIcon(ctx, in, opts...)
}
